{"ast":null,"code":"var _jsxFileName = \"/Users/sairahulpadma/Desktop/leetcodeUI/frontend/src/pages/DashboardComponent/Problems.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport DashboardServices from \"../../services/DashboardServices\"; // Adjust your services accordingly\n\nimport { TableContainer, Table, TableHead, TableRow, TableHeader, TableData, DifficultyLabel, FilterContainer, FilterLabel, FilterSelect } from \"./ProductElement\"; // Adjust these for styling based on your design\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CodingProblems = () => {\n  _s();\n\n  const [problems, setProblems] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [filterCategory, setFilterCategory] = useState(\"\"); // For filtering by category\n\n  const [filterDifficulty, setFilterDifficulty] = useState(\"\"); // For filtering by difficulty\n\n  useEffect(() => {\n    DashboardServices.getAllProblems().then(response => {\n      setProblems(response.data); // Assuming response.data contains the list of problems\n\n      setLoading(false);\n    }).catch(error => {\n      console.log(error);\n      setLoading(false);\n    });\n  }, []);\n\n  const handleCategoryFilter = e => {\n    setFilterCategory(e.target.value);\n  };\n\n  const handleDifficultyFilter = e => {\n    setFilterDifficulty(e.target.value);\n  };\n\n  const filteredProblems = problems.filter(problem => {\n    return (filterCategory === \"\" || problem.category === filterCategory) && (filterDifficulty === \"\" || problem.difficulty === filterDifficulty);\n  });\n  return /*#__PURE__*/_jsxDEV(ProductsContainer, {\n    children: [/*#__PURE__*/_jsxDEV(ProductsH1, {\n      children: \"Coding Problems\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Filter by Category:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleCategoryFilter,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Array\",\n          children: \"Array\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Linked List\",\n          children: \"Linked List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Dynamic Programming\",\n          children: \"Dynamic Programming\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Filter by Difficulty:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleDifficultyFilter,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Easy\",\n          children: \"Easy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Medium\",\n          children: \"Medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Hard\",\n          children: \"Hard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(ProductsWrapper, {\n      children: filteredProblems.map(problem => /*#__PURE__*/_jsxDEV(ProductsCard, {\n        children: [/*#__PURE__*/_jsxDEV(ProductsH2, {\n          children: problem.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(ProductsP, {\n          children: problem.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Difficulty: \", problem.difficulty]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Category: \", problem.category]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }, this)]\n      }, problem.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CodingProblems, \"2CJRYIzlx9XvQCBJveo7AErAbmw=\");\n\n_c = CodingProblems;\nexport default CodingProblems;\n\nvar _c;\n\n$RefreshReg$(_c, \"CodingProblems\");","map":{"version":3,"sources":["/Users/sairahulpadma/Desktop/leetcodeUI/frontend/src/pages/DashboardComponent/Problems.js"],"names":["React","useEffect","useState","DashboardServices","TableContainer","Table","TableHead","TableRow","TableHeader","TableData","DifficultyLabel","FilterContainer","FilterLabel","FilterSelect","CodingProblems","problems","setProblems","loading","setLoading","filterCategory","setFilterCategory","filterDifficulty","setFilterDifficulty","getAllProblems","then","response","data","catch","error","console","log","handleCategoryFilter","e","target","value","handleDifficultyFilter","filteredProblems","filter","problem","category","difficulty","map","title","description","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport DashboardServices from \"../../services/DashboardServices\"; // Adjust your services accordingly\nimport {\n    TableContainer,\n    Table,\n    TableHead,\n    TableRow,\n    TableHeader,\n    TableData,\n    DifficultyLabel,\n    FilterContainer,\n    FilterLabel,\n    FilterSelect\n} from \"./ProductElement\"; // Adjust these for styling based on your design\n\nconst CodingProblems = () => {\n    const [problems, setProblems] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [filterCategory, setFilterCategory] = useState(\"\"); // For filtering by category\n    const [filterDifficulty, setFilterDifficulty] = useState(\"\"); // For filtering by difficulty\n\n    useEffect(() => {\n        DashboardServices.getAllProblems()\n            .then(response => {\n                setProblems(response.data);  // Assuming response.data contains the list of problems\n                setLoading(false);\n            })\n            .catch(error => {\n                console.log(error);\n                setLoading(false);\n            });\n    }, []);\n\n    const handleCategoryFilter = (e) => {\n        setFilterCategory(e.target.value);\n    };\n\n    const handleDifficultyFilter = (e) => {\n        setFilterDifficulty(e.target.value);\n    };\n\n    const filteredProblems = problems.filter(problem => {\n        return (filterCategory === \"\" || problem.category === filterCategory) && \n               (filterDifficulty === \"\" || problem.difficulty === filterDifficulty);\n    });\n\n    return (\n        <ProductsContainer>\n            <ProductsH1>Coding Problems</ProductsH1>\n\n            {/* Filters */}\n            <div>\n                <label>Filter by Category:</label>\n                <select onChange={handleCategoryFilter}>\n                    <option value=\"\">All</option>\n                    <option value=\"Array\">Array</option>\n                    <option value=\"Linked List\">Linked List</option>\n                    <option value=\"Dynamic Programming\">Dynamic Programming</option>\n                    {/* Add more categories as needed */}\n                </select>\n\n                <label>Filter by Difficulty:</label>\n                <select onChange={handleDifficultyFilter}>\n                    <option value=\"\">All</option>\n                    <option value=\"Easy\">Easy</option>\n                    <option value=\"Medium\">Medium</option>\n                    <option value=\"Hard\">Hard</option>\n                </select>\n            </div>\n\n            {/* Problem List */}\n            {loading ? (\n                <p>Loading...</p>\n            ) : (\n                <ProductsWrapper>\n                    {filteredProblems.map(problem => (\n                        <ProductsCard key={problem.id}>\n                            <ProductsH2>{problem.title}</ProductsH2>\n                            <ProductsP>{problem.description}</ProductsP>\n                            <p>Difficulty: {problem.difficulty}</p>\n                            <p>Category: {problem.category}</p>\n                            {/* Add more details as needed */}\n                        </ProductsCard>\n                    ))}\n                </ProductsWrapper>\n            )}\n        </ProductsContainer>\n    );\n};\n\nexport default CodingProblems;\n"]},"metadata":{},"sourceType":"module"}