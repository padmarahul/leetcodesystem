{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"value\", \"selection\", \"extensions\", \"onChange\", \"onStatistics\", \"onCreateEditor\", \"onUpdate\", \"autoFocus\", \"theme\", \"height\", \"minHeight\", \"maxHeight\", \"width\", \"minWidth\", \"maxWidth\", \"basicSetup\", \"placeholder\", \"indentWithTab\", \"editable\", \"readOnly\", \"root\", \"initialState\"];\nimport React, { useRef, forwardRef, useImperativeHandle } from 'react';\nimport { useCodeMirror } from './useCodeMirror';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport * from '@codemirror/view';\nexport * from '@codemirror/state';\nexport * from '@uiw/codemirror-extensions-basic-setup';\nexport * from './useCodeMirror';\nexport * from './getDefaultExtensions';\nexport * from './utils';\nvar ReactCodeMirror = /*#__PURE__*/forwardRef((props, ref) => {\n  var {\n    className,\n    value = '',\n    selection,\n    extensions = [],\n    onChange,\n    onStatistics,\n    onCreateEditor,\n    onUpdate,\n    autoFocus,\n    theme = 'light',\n    height,\n    minHeight,\n    maxHeight,\n    width,\n    minWidth,\n    maxWidth,\n    basicSetup,\n    placeholder,\n    indentWithTab,\n    editable,\n    readOnly,\n    root,\n    initialState\n  } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var editor = useRef(null);\n  var {\n    state,\n    view,\n    container\n  } = useCodeMirror({\n    container: editor.current,\n    root,\n    value,\n    autoFocus,\n    theme,\n    height,\n    minHeight,\n    maxHeight,\n    width,\n    minWidth,\n    maxWidth,\n    basicSetup,\n    placeholder,\n    indentWithTab,\n    editable,\n    readOnly,\n    selection,\n    onChange,\n    onStatistics,\n    onCreateEditor,\n    onUpdate,\n    extensions,\n    initialState\n  });\n  useImperativeHandle(ref, () => ({\n    editor: editor.current,\n    state: state,\n    view: view\n  }), [editor, container, state, view]); // check type of value\n\n  if (typeof value !== 'string') {\n    throw new Error(\"value must be typeof string but got \" + typeof value);\n  }\n\n  var defaultClassNames = typeof theme === 'string' ? \"cm-theme-\" + theme : 'cm-theme';\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: editor,\n    className: \"\" + defaultClassNames + (className ? \" \" + className : '')\n  }, other));\n});\nReactCodeMirror.displayName = 'CodeMirror';\nexport default ReactCodeMirror;","map":{"version":3,"sources":["/Users/sairahulpadma/Desktop/leetcodesystem/leetcodeUI/frontend/node_modules/@uiw/react-codemirror/esm/index.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","useRef","forwardRef","useImperativeHandle","useCodeMirror","jsx","_jsx","ReactCodeMirror","props","ref","className","value","selection","extensions","onChange","onStatistics","onCreateEditor","onUpdate","autoFocus","theme","height","minHeight","maxHeight","width","minWidth","maxWidth","basicSetup","placeholder","indentWithTab","editable","readOnly","root","initialState","other","editor","state","view","container","current","Error","defaultClassNames","displayName"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"value\", \"selection\", \"extensions\", \"onChange\", \"onStatistics\", \"onCreateEditor\", \"onUpdate\", \"autoFocus\", \"theme\", \"height\", \"minHeight\", \"maxHeight\", \"width\", \"minWidth\", \"maxWidth\", \"basicSetup\", \"placeholder\", \"indentWithTab\", \"editable\", \"readOnly\", \"root\", \"initialState\"];\nimport React, { useRef, forwardRef, useImperativeHandle } from 'react';\nimport { useCodeMirror } from './useCodeMirror';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport * from '@codemirror/view';\nexport * from '@codemirror/state';\nexport * from '@uiw/codemirror-extensions-basic-setup';\nexport * from './useCodeMirror';\nexport * from './getDefaultExtensions';\nexport * from './utils';\nvar ReactCodeMirror = /*#__PURE__*/forwardRef((props, ref) => {\n  var {\n      className,\n      value = '',\n      selection,\n      extensions = [],\n      onChange,\n      onStatistics,\n      onCreateEditor,\n      onUpdate,\n      autoFocus,\n      theme = 'light',\n      height,\n      minHeight,\n      maxHeight,\n      width,\n      minWidth,\n      maxWidth,\n      basicSetup,\n      placeholder,\n      indentWithTab,\n      editable,\n      readOnly,\n      root,\n      initialState\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var editor = useRef(null);\n  var {\n    state,\n    view,\n    container\n  } = useCodeMirror({\n    container: editor.current,\n    root,\n    value,\n    autoFocus,\n    theme,\n    height,\n    minHeight,\n    maxHeight,\n    width,\n    minWidth,\n    maxWidth,\n    basicSetup,\n    placeholder,\n    indentWithTab,\n    editable,\n    readOnly,\n    selection,\n    onChange,\n    onStatistics,\n    onCreateEditor,\n    onUpdate,\n    extensions,\n    initialState\n  });\n  useImperativeHandle(ref, () => ({\n    editor: editor.current,\n    state: state,\n    view: view\n  }), [editor, container, state, view]);\n\n  // check type of value\n  if (typeof value !== 'string') {\n    throw new Error(\"value must be typeof string but got \" + typeof value);\n  }\n  var defaultClassNames = typeof theme === 'string' ? \"cm-theme-\" + theme : 'cm-theme';\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: editor,\n    className: \"\" + defaultClassNames + (className ? \" \" + className : '')\n  }, other));\n});\nReactCodeMirror.displayName = 'CodeMirror';\nexport default ReactCodeMirror;"]},"metadata":{},"sourceType":"module"}