{"ast":null,"code":"import _slicedToArray from\"/Users/sairahulpadma/Desktop/leetcodesystem/leetcodeUI/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState,useContext}from\"react\";import{useNavigate}from\"react-router-dom\";// Import useNavigate\nimport DashboardServices from'../../services/DashboardServices';import{GlobalStateContext}from'../../GlobalStateContext';// Import global state context\nimport{TableContainer,Table,TableHead,TableRow,TableHeader,TableData,DifficultyLabel,FilterContainer,FilterLabel,FilterSelect}from\"./StyledElements\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Problems(){var _useContext=useContext(GlobalStateContext),_useContext2=_slicedToArray(_useContext,2),state=_useContext2[0],dispatch=_useContext2[1];var _useState=useState([]),_useState2=_slicedToArray(_useState,2),problems=_useState2[0],setProblems=_useState2[1];var _useState3=useState(\"All\"),_useState4=_slicedToArray(_useState3,2),categoryFilter=_useState4[0],setCategoryFilter=_useState4[1];var _useState5=useState(\"All\"),_useState6=_slicedToArray(_useState5,2),difficultyFilter=_useState6[0],setDifficultyFilter=_useState6[1];var navigate=useNavigate();// Fetch all problems initially\nuseEffect(function(){DashboardServices.getAllProblems().then(function(response){setProblems(response.data);}).catch(function(error){console.log(error);});},[]);// Fetch problems by category filter\nvar fetchProblemsByCategory=function fetchProblemsByCategory(category){if(category===\"All\"){// Fetch all problems\nDashboardServices.getAllProblems().then(function(response){setProblems(response.data);}).catch(function(error){console.log(error);});}else{// Fetch problems by selected category\nDashboardServices.getProblemsByCategory(category).then(function(response){setProblems(response.data);}).catch(function(error){console.log(error);});}};// Fetch problems by difficulty filter\nvar fetchProblemsByDifficulty=function fetchProblemsByDifficulty(difficulty){if(difficulty===\"All\"){// Fetch all problems\nDashboardServices.getAllProblems().then(function(response){setProblems(response.data);}).catch(function(error){console.log(error);});}else{// Fetch problems by selected difficulty\nDashboardServices.getProblemsByDifficulty(difficulty).then(function(response){setProblems(response.data);}).catch(function(error){console.log(error);});}};var handleRowClick=function handleRowClick(problemId){// Fetch the problem data by ID from the backend\nDashboardServices.getProblemById(problemId).then(function(response){// Store the fetched problem data in the global state\nvar problemData=response.data;dispatch({type:'SET_PROBLEM_DATA',payload:problemData});// Navigate to the coding editor page once data is set\nnavigate(\"/coding-editor/\".concat(problemId));}).catch(function(error){console.error(\"Error fetching problem data:\",error);});};// Handle category filter change\nvar handleCategoryChange=function handleCategoryChange(event){var selectedCategory=event.target.value;setCategoryFilter(selectedCategory);fetchProblemsByCategory(selectedCategory);};// Handle difficulty filter change\nvar handleDifficultyChange=function handleDifficultyChange(event){var selectedDifficulty=event.target.value;setDifficultyFilter(selectedDifficulty);fetchProblemsByDifficulty(selectedDifficulty);};return/*#__PURE__*/_jsxs(TableContainer,{children:[/*#__PURE__*/_jsxs(FilterContainer,{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(FilterLabel,{style:{color:\"white\"},children:\"Filter by Category:\"}),/*#__PURE__*/_jsxs(FilterSelect,{value:categoryFilter,onChange:handleCategoryChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"All\",children:\"All\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Array\",children:\"Array\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Linked List\",children:\"Linked List\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Dynamic Programming\",children:\"Dynamic Programming\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Stack\",children:\"Stack\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Binary Search\",children:\"Binary Search\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Binary Tree\",children:\"Binary Tree\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Intervals\",children:\"Intervals\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Two Pointers\",children:\"Two Pointers\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Sliding Window\",children:\"Sliding Window\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Backtracking\",children:\"Backtracking\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(FilterLabel,{style:{color:\"white\"},children:\"Filter by Difficulty:\"}),/*#__PURE__*/_jsxs(FilterSelect,{value:difficultyFilter,onChange:handleDifficultyChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"All\",children:\"All\"}),/*#__PURE__*/_jsx(\"option\",{value:\"easy\",children:\"Easy\"}),/*#__PURE__*/_jsx(\"option\",{value:\"medium\",children:\"Medium\"}),/*#__PURE__*/_jsx(\"option\",{value:\"hard\",children:\"Hard\"})]})]})]}),/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableHeader,{children:\"Title\"}),/*#__PURE__*/_jsx(TableHeader,{children:\"Description\"}),/*#__PURE__*/_jsx(TableHeader,{children:\"Difficulty\"}),/*#__PURE__*/_jsx(TableHeader,{children:\"Category\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:problems.map(function(problem){return/*#__PURE__*/_jsxs(TableRow,{onClick:function onClick(){return handleRowClick(problem.id);},children:[/*#__PURE__*/_jsx(TableData,{children:problem.title}),/*#__PURE__*/_jsx(TableData,{children:problem.description}),/*#__PURE__*/_jsx(TableData,{children:/*#__PURE__*/_jsx(DifficultyLabel,{difficulty:problem.difficulty,children:problem.difficulty})}),/*#__PURE__*/_jsx(TableData,{children:problem.category})]},problem.id);})})]})]});}export default Problems;","map":{"version":3,"sources":["/Users/sairahulpadma/Desktop/leetcodesystem/leetcodeUI/frontend/src/pages/DashboardComponent/Problems.js"],"names":["React","useEffect","useState","useContext","useNavigate","DashboardServices","GlobalStateContext","TableContainer","Table","TableHead","TableRow","TableHeader","TableData","DifficultyLabel","FilterContainer","FilterLabel","FilterSelect","Problems","state","dispatch","problems","setProblems","categoryFilter","setCategoryFilter","difficultyFilter","setDifficultyFilter","navigate","getAllProblems","then","response","data","catch","error","console","log","fetchProblemsByCategory","category","getProblemsByCategory","fetchProblemsByDifficulty","difficulty","getProblemsByDifficulty","handleRowClick","problemId","getProblemById","problemData","type","payload","handleCategoryChange","event","selectedCategory","target","value","handleDifficultyChange","selectedDifficulty","color","map","problem","id","title","description"],"mappings":"sLAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,CAAqCC,UAArC,KAAuD,OAAvD,CACA,OAASC,WAAT,KAA4B,kBAA5B,CAAgD;AAChD,MAAOC,CAAAA,iBAAP,KAA8B,kCAA9B,CACA,OAASC,kBAAT,KAAmC,0BAAnC,CAA+D;AAC/D,OACEC,cADF,CAEEC,KAFF,CAGEC,SAHF,CAIEC,QAJF,CAKEC,WALF,CAMEC,SANF,CAOEC,eAPF,CAQEC,eARF,CASEC,WATF,CAUEC,YAVF,KAWO,kBAXP,C,wFAaA,QAASC,CAAAA,QAAT,EAAoB,iBACQd,UAAU,CAACG,kBAAD,CADlB,4CACXY,KADW,iBACJC,QADI,+BAEcjB,QAAQ,CAAC,EAAD,CAFtB,wCAEXkB,QAFW,eAEDC,WAFC,8BAG0BnB,QAAQ,CAAC,KAAD,CAHlC,yCAGXoB,cAHW,eAGKC,iBAHL,8BAI8BrB,QAAQ,CAAC,KAAD,CAJtC,yCAIXsB,gBAJW,eAIOC,mBAJP,eAKpB,GAAMC,CAAAA,QAAQ,CAAGtB,WAAW,EAA5B,CACE;AACAH,SAAS,CAAC,UAAM,CACdI,iBAAiB,CAACsB,cAAlB,GAAmCC,IAAnC,CAAwC,SAAAC,QAAQ,CAAI,CAClDR,WAAW,CAACQ,QAAQ,CAACC,IAAV,CAAX,CACD,CAFD,EAEGC,KAFH,CAES,SAAAC,KAAK,CAAI,CAChBC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACD,CAJD,EAKD,CANQ,CAMN,EANM,CAAT,CAQA;AACA,GAAMG,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAACC,QAAD,CAAc,CAC5C,GAAIA,QAAQ,GAAK,KAAjB,CAAwB,CACtB;AACA/B,iBAAiB,CAACsB,cAAlB,GAAmCC,IAAnC,CAAwC,SAAAC,QAAQ,CAAI,CAClDR,WAAW,CAACQ,QAAQ,CAACC,IAAV,CAAX,CACD,CAFD,EAEGC,KAFH,CAES,SAAAC,KAAK,CAAI,CAChBC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACD,CAJD,EAKD,CAPD,IAOO,CACL;AACA3B,iBAAiB,CAACgC,qBAAlB,CAAwCD,QAAxC,EAAkDR,IAAlD,CAAuD,SAAAC,QAAQ,CAAI,CACjER,WAAW,CAACQ,QAAQ,CAACC,IAAV,CAAX,CACD,CAFD,EAEGC,KAFH,CAES,SAAAC,KAAK,CAAI,CAChBC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACD,CAJD,EAKD,CACF,CAhBD,CAkBA;AACA,GAAMM,CAAAA,yBAAyB,CAAG,QAA5BA,CAAAA,yBAA4B,CAACC,UAAD,CAAgB,CAChD,GAAIA,UAAU,GAAK,KAAnB,CAA0B,CACxB;AACAlC,iBAAiB,CAACsB,cAAlB,GAAmCC,IAAnC,CAAwC,SAAAC,QAAQ,CAAI,CAClDR,WAAW,CAACQ,QAAQ,CAACC,IAAV,CAAX,CACD,CAFD,EAEGC,KAFH,CAES,SAAAC,KAAK,CAAI,CAChBC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACD,CAJD,EAKD,CAPD,IAOO,CACL;AACA3B,iBAAiB,CAACmC,uBAAlB,CAA0CD,UAA1C,EAAsDX,IAAtD,CAA2D,SAAAC,QAAQ,CAAI,CACrER,WAAW,CAACQ,QAAQ,CAACC,IAAV,CAAX,CACD,CAFD,EAEGC,KAFH,CAES,SAAAC,KAAK,CAAI,CAChBC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACD,CAJD,EAKD,CACF,CAhBD,CAkBA,GAAMS,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,SAAD,CAAe,CACpC;AACArC,iBAAiB,CAACsC,cAAlB,CAAiCD,SAAjC,EACGd,IADH,CACQ,SAAAC,QAAQ,CAAI,CAChB;AACA,GAAMe,CAAAA,WAAW,CAAGf,QAAQ,CAACC,IAA7B,CACAX,QAAQ,CAAC,CAAE0B,IAAI,CAAE,kBAAR,CAA4BC,OAAO,CAAEF,WAArC,CAAD,CAAR,CAEA;AACAlB,QAAQ,0BAAmBgB,SAAnB,EAAR,CACD,CARH,EASGX,KATH,CASS,SAAAC,KAAK,CAAI,CACdC,OAAO,CAACD,KAAR,CAAc,8BAAd,CAA8CA,KAA9C,EACD,CAXH,EAYD,CAdD,CAgBA;AACA,GAAMe,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,KAAD,CAAW,CACtC,GAAMC,CAAAA,gBAAgB,CAAGD,KAAK,CAACE,MAAN,CAAaC,KAAtC,CACA5B,iBAAiB,CAAC0B,gBAAD,CAAjB,CACAd,uBAAuB,CAACc,gBAAD,CAAvB,CACD,CAJD,CAMA;AACA,GAAMG,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACJ,KAAD,CAAW,CACxC,GAAMK,CAAAA,kBAAkB,CAAGL,KAAK,CAACE,MAAN,CAAaC,KAAxC,CACA1B,mBAAmB,CAAC4B,kBAAD,CAAnB,CACAf,yBAAyB,CAACe,kBAAD,CAAzB,CACD,CAJD,CAMA,mBACE,MAAC,cAAD,yBACE,MAAC,eAAD,yBACE,oCACE,KAAC,WAAD,EAAa,KAAK,CAAE,CAACC,KAAK,CAAE,OAAR,CAApB,iCADF,cAEE,MAAC,YAAD,EAAc,KAAK,CAAEhC,cAArB,CAAqC,QAAQ,CAAEyB,oBAA/C,wBACE,eAAQ,KAAK,CAAC,KAAd,iBADF,cAEE,eAAQ,KAAK,CAAC,OAAd,mBAFF,cAGE,eAAQ,KAAK,CAAC,aAAd,yBAHF,cAIE,eAAQ,KAAK,CAAC,qBAAd,iCAJF,cAKE,eAAQ,KAAK,CAAC,OAAd,mBALF,cAME,eAAQ,KAAK,CAAC,eAAd,2BANF,cAOE,eAAQ,KAAK,CAAC,aAAd,yBAPF,cAQE,eAAQ,KAAK,CAAC,WAAd,uBARF,cASE,eAAQ,KAAK,CAAC,cAAd,0BATF,cAUE,eAAQ,KAAK,CAAC,gBAAd,4BAVF,cAWE,eAAQ,KAAK,CAAC,cAAd,0BAXF,GAFF,GADF,cAiBE,oCACE,KAAC,WAAD,EAAa,KAAK,CAAE,CAACO,KAAK,CAAE,OAAR,CAApB,mCADF,cAEE,MAAC,YAAD,EAAc,KAAK,CAAE9B,gBAArB,CAAuC,QAAQ,CAAE4B,sBAAjD,wBACE,eAAQ,KAAK,CAAC,KAAd,iBADF,cAEE,eAAQ,KAAK,CAAC,MAAd,kBAFF,cAGE,eAAQ,KAAK,CAAC,QAAd,oBAHF,cAIE,eAAQ,KAAK,CAAC,MAAd,kBAJF,GAFF,GAjBF,GADF,cA4BE,MAAC,KAAD,yBACE,KAAC,SAAD,wBACE,MAAC,QAAD,yBACE,KAAC,WAAD,oBADF,cAEE,KAAC,WAAD,0BAFF,cAGE,KAAC,WAAD,yBAHF,cAIE,KAAC,WAAD,uBAJF,GADF,EADF,cASE,uBACGhC,QAAQ,CAACmC,GAAT,CAAa,SAACC,OAAD,qBACZ,MAAC,QAAD,EAA2B,OAAO,CAAE,yBAAMf,CAAAA,cAAc,CAACe,OAAO,CAACC,EAAT,CAApB,EAApC,wBACE,KAAC,SAAD,WAAYD,OAAO,CAACE,KAApB,EADF,cAEE,KAAC,SAAD,WAAYF,OAAO,CAACG,WAApB,EAFF,cAGE,KAAC,SAAD,wBACE,KAAC,eAAD,EAAiB,UAAU,CAAEH,OAAO,CAACjB,UAArC,UACGiB,OAAO,CAACjB,UADX,EADF,EAHF,cAQE,KAAC,SAAD,WAAYiB,OAAO,CAACpB,QAApB,EARF,GAAeoB,OAAO,CAACC,EAAvB,CADY,EAAb,CADH,EATF,GA5BF,GADF,CAuDD,CAED,cAAexC,CAAAA,QAAf","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate\nimport DashboardServices from '../../services/DashboardServices';\nimport { GlobalStateContext } from '../../GlobalStateContext'; // Import global state context\nimport {\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableData,\n  DifficultyLabel,\n  FilterContainer,\n  FilterLabel,\n  FilterSelect\n} from \"./StyledElements\";\n\nfunction Problems() {\n  const [state, dispatch] = useContext(GlobalStateContext);  \n  const [problems, setProblems] = useState([]);\n  const [categoryFilter, setCategoryFilter] = useState(\"All\");\n  const [difficultyFilter, setDifficultyFilter] = useState(\"All\");\nconst navigate = useNavigate(); \n  // Fetch all problems initially\n  useEffect(() => {\n    DashboardServices.getAllProblems().then(response => {\n      setProblems(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n\n  // Fetch problems by category filter\n  const fetchProblemsByCategory = (category) => {\n    if (category === \"All\") {\n      // Fetch all problems\n      DashboardServices.getAllProblems().then(response => {\n        setProblems(response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    } else {\n      // Fetch problems by selected category\n      DashboardServices.getProblemsByCategory(category).then(response => {\n        setProblems(response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  };\n\n  // Fetch problems by difficulty filter\n  const fetchProblemsByDifficulty = (difficulty) => {\n    if (difficulty === \"All\") {\n      // Fetch all problems\n      DashboardServices.getAllProblems().then(response => {\n        setProblems(response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    } else {\n      // Fetch problems by selected difficulty\n      DashboardServices.getProblemsByDifficulty(difficulty).then(response => {\n        setProblems(response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  };\n\n  const handleRowClick = (problemId) => {\n    // Fetch the problem data by ID from the backend\n    DashboardServices.getProblemById(problemId)\n      .then(response => {\n        // Store the fetched problem data in the global state\n        const problemData = response.data;\n        dispatch({ type: 'SET_PROBLEM_DATA', payload: problemData });\n\n        // Navigate to the coding editor page once data is set\n        navigate(`/coding-editor/${problemId}`);\n      })\n      .catch(error => {\n        console.error(\"Error fetching problem data:\", error);\n      });\n  };\n\n  // Handle category filter change\n  const handleCategoryChange = (event) => {\n    const selectedCategory = event.target.value;\n    setCategoryFilter(selectedCategory);\n    fetchProblemsByCategory(selectedCategory);\n  };\n\n  // Handle difficulty filter change\n  const handleDifficultyChange = (event) => {\n    const selectedDifficulty = event.target.value;\n    setDifficultyFilter(selectedDifficulty);\n    fetchProblemsByDifficulty(selectedDifficulty);\n  };\n\n  return (\n    <TableContainer>\n      <FilterContainer>\n        <div>\n          <FilterLabel style={{color: \"white\"}}>Filter by Category:</FilterLabel>\n          <FilterSelect value={categoryFilter} onChange={handleCategoryChange}>\n            <option value=\"All\">All</option>\n            <option value=\"Array\">Array</option>\n            <option value=\"Linked List\">Linked List</option>\n            <option value=\"Dynamic Programming\">Dynamic Programming</option>\n            <option value=\"Stack\">Stack</option>\n            <option value=\"Binary Search\">Binary Search</option>\n            <option value=\"Binary Tree\">Binary Tree</option>\n            <option value=\"Intervals\">Intervals</option>\n            <option value=\"Two Pointers\">Two Pointers</option>\n            <option value=\"Sliding Window\">Sliding Window</option>\n            <option value=\"Backtracking\">Backtracking</option>\n          </FilterSelect>\n        </div>\n        <div>\n          <FilterLabel style={{color: \"white\"}}>Filter by Difficulty:</FilterLabel>\n          <FilterSelect value={difficultyFilter} onChange={handleDifficultyChange}>\n            <option value=\"All\">All</option>\n            <option value=\"easy\">Easy</option>\n            <option value=\"medium\">Medium</option>\n            <option value=\"hard\">Hard</option>\n          </FilterSelect>\n        </div>\n      </FilterContainer>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableHeader>Title</TableHeader>\n            <TableHeader>Description</TableHeader>\n            <TableHeader>Difficulty</TableHeader>\n            <TableHeader>Category</TableHeader>\n          </TableRow>\n        </TableHead>\n        <tbody>\n          {problems.map((problem) => (\n            <TableRow key={problem.id} onClick={() => handleRowClick(problem.id)}>\n              <TableData>{problem.title}</TableData>\n              <TableData>{problem.description}</TableData>\n              <TableData>\n                <DifficultyLabel difficulty={problem.difficulty}>\n                  {problem.difficulty}\n                </DifficultyLabel>\n              </TableData>\n              <TableData>{problem.category}</TableData>\n            </TableRow>\n          ))}\n        </tbody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default Problems;\n"]},"metadata":{},"sourceType":"module"}