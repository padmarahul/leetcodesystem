{"ast":null,"code":"import { EditorView } from '@codemirror/view';\nimport { HighlightStyle, syntaxHighlighting } from '@codemirror/language';\nexport var createTheme = _ref => {\n  var {\n    theme,\n    settings = {},\n    styles = []\n  } = _ref;\n  var themeOptions = {\n    '.cm-gutters': {}\n  };\n  var baseStyle = {};\n\n  if (settings.background) {\n    baseStyle.backgroundColor = settings.background;\n  }\n\n  if (settings.backgroundImage) {\n    baseStyle.backgroundImage = settings.backgroundImage;\n  }\n\n  if (settings.foreground) {\n    baseStyle.color = settings.foreground;\n  }\n\n  if (settings.fontSize) {\n    baseStyle.fontSize = settings.fontSize;\n  }\n\n  if (settings.background || settings.foreground) {\n    themeOptions['&'] = baseStyle;\n  }\n\n  if (settings.fontFamily) {\n    themeOptions['&.cm-editor .cm-scroller'] = {\n      fontFamily: settings.fontFamily\n    };\n  }\n\n  if (settings.gutterBackground) {\n    themeOptions['.cm-gutters'].backgroundColor = settings.gutterBackground;\n  }\n\n  if (settings.gutterForeground) {\n    themeOptions['.cm-gutters'].color = settings.gutterForeground;\n  }\n\n  if (settings.gutterBorder) {\n    themeOptions['.cm-gutters'].borderRightColor = settings.gutterBorder;\n  }\n\n  if (settings.caret) {\n    themeOptions['.cm-content'] = {\n      caretColor: settings.caret\n    };\n    themeOptions['.cm-cursor, .cm-dropCursor'] = {\n      borderLeftColor: settings.caret\n    };\n  }\n\n  var activeLineGutterStyle = {};\n\n  if (settings.gutterActiveForeground) {\n    activeLineGutterStyle.color = settings.gutterActiveForeground;\n  }\n\n  if (settings.lineHighlight) {\n    themeOptions['.cm-activeLine'] = {\n      backgroundColor: settings.lineHighlight\n    };\n    activeLineGutterStyle.backgroundColor = settings.lineHighlight;\n  }\n\n  themeOptions['.cm-activeLineGutter'] = activeLineGutterStyle;\n\n  if (settings.selection) {\n    themeOptions['&.cm-focused .cm-selectionBackground, & .cm-line::selection, & .cm-selectionLayer .cm-selectionBackground, .cm-content ::selection'] = {\n      background: settings.selection + ' !important'\n    };\n  }\n\n  if (settings.selectionMatch) {\n    themeOptions['& .cm-selectionMatch'] = {\n      backgroundColor: settings.selectionMatch\n    };\n  }\n\n  var themeExtension = EditorView.theme(themeOptions, {\n    dark: theme === 'dark'\n  });\n  var highlightStyle = HighlightStyle.define(styles);\n  var extension = [themeExtension, syntaxHighlighting(highlightStyle)];\n  return extension;\n};\nexport default createTheme;","map":{"version":3,"sources":["/Users/sairahulpadma/Desktop/leetcodeUI/frontend/node_modules/@uiw/codemirror-themes/esm/index.js"],"names":["EditorView","HighlightStyle","syntaxHighlighting","createTheme","_ref","theme","settings","styles","themeOptions","baseStyle","background","backgroundColor","backgroundImage","foreground","color","fontSize","fontFamily","gutterBackground","gutterForeground","gutterBorder","borderRightColor","caret","caretColor","borderLeftColor","activeLineGutterStyle","gutterActiveForeground","lineHighlight","selection","selectionMatch","themeExtension","dark","highlightStyle","define","extension"],"mappings":"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","sourcesContent":["import { EditorView } from '@codemirror/view';\nimport { HighlightStyle, syntaxHighlighting } from '@codemirror/language';\nexport var createTheme = _ref => {\n  var {\n    theme,\n    settings = {},\n    styles = []\n  } = _ref;\n  var themeOptions = {\n    '.cm-gutters': {}\n  };\n  var baseStyle = {};\n  if (settings.background) {\n    baseStyle.backgroundColor = settings.background;\n  }\n  if (settings.backgroundImage) {\n    baseStyle.backgroundImage = settings.backgroundImage;\n  }\n  if (settings.foreground) {\n    baseStyle.color = settings.foreground;\n  }\n  if (settings.fontSize) {\n    baseStyle.fontSize = settings.fontSize;\n  }\n  if (settings.background || settings.foreground) {\n    themeOptions['&'] = baseStyle;\n  }\n  if (settings.fontFamily) {\n    themeOptions['&.cm-editor .cm-scroller'] = {\n      fontFamily: settings.fontFamily\n    };\n  }\n  if (settings.gutterBackground) {\n    themeOptions['.cm-gutters'].backgroundColor = settings.gutterBackground;\n  }\n  if (settings.gutterForeground) {\n    themeOptions['.cm-gutters'].color = settings.gutterForeground;\n  }\n  if (settings.gutterBorder) {\n    themeOptions['.cm-gutters'].borderRightColor = settings.gutterBorder;\n  }\n  if (settings.caret) {\n    themeOptions['.cm-content'] = {\n      caretColor: settings.caret\n    };\n    themeOptions['.cm-cursor, .cm-dropCursor'] = {\n      borderLeftColor: settings.caret\n    };\n  }\n  var activeLineGutterStyle = {};\n  if (settings.gutterActiveForeground) {\n    activeLineGutterStyle.color = settings.gutterActiveForeground;\n  }\n  if (settings.lineHighlight) {\n    themeOptions['.cm-activeLine'] = {\n      backgroundColor: settings.lineHighlight\n    };\n    activeLineGutterStyle.backgroundColor = settings.lineHighlight;\n  }\n  themeOptions['.cm-activeLineGutter'] = activeLineGutterStyle;\n  if (settings.selection) {\n    themeOptions['&.cm-focused .cm-selectionBackground, & .cm-line::selection, & .cm-selectionLayer .cm-selectionBackground, .cm-content ::selection'] = {\n      background: settings.selection + ' !important'\n    };\n  }\n  if (settings.selectionMatch) {\n    themeOptions['& .cm-selectionMatch'] = {\n      backgroundColor: settings.selectionMatch\n    };\n  }\n  var themeExtension = EditorView.theme(themeOptions, {\n    dark: theme === 'dark'\n  });\n  var highlightStyle = HighlightStyle.define(styles);\n  var extension = [themeExtension, syntaxHighlighting(highlightStyle)];\n  return extension;\n};\nexport default createTheme;"]},"metadata":{},"sourceType":"module"}