{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"value\", \"selection\", \"extensions\", \"onChange\", \"onStatistics\", \"onCreateEditor\", \"onUpdate\", \"autoFocus\", \"theme\", \"height\", \"minHeight\", \"maxHeight\", \"width\", \"minWidth\", \"maxWidth\", \"basicSetup\", \"placeholder\", \"indentWithTab\", \"editable\", \"readOnly\", \"root\", \"initialState\"];\nimport React, { useRef, forwardRef, useImperativeHandle } from 'react';\nimport { useCodeMirror } from './useCodeMirror';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport * from '@codemirror/view';\nexport * from '@codemirror/state';\nexport * from '@uiw/codemirror-extensions-basic-setup';\nexport * from './useCodeMirror';\nexport * from './getDefaultExtensions';\nexport * from './utils';\nvar ReactCodeMirror = /*#__PURE__*/forwardRef(function (props, ref) {\n  var className = props.className,\n      _props$value = props.value,\n      value = _props$value === void 0 ? '' : _props$value,\n      selection = props.selection,\n      _props$extensions = props.extensions,\n      extensions = _props$extensions === void 0 ? [] : _props$extensions,\n      onChange = props.onChange,\n      onStatistics = props.onStatistics,\n      onCreateEditor = props.onCreateEditor,\n      onUpdate = props.onUpdate,\n      autoFocus = props.autoFocus,\n      _props$theme = props.theme,\n      theme = _props$theme === void 0 ? 'light' : _props$theme,\n      height = props.height,\n      minHeight = props.minHeight,\n      maxHeight = props.maxHeight,\n      width = props.width,\n      minWidth = props.minWidth,\n      maxWidth = props.maxWidth,\n      basicSetup = props.basicSetup,\n      placeholder = props.placeholder,\n      indentWithTab = props.indentWithTab,\n      editable = props.editable,\n      readOnly = props.readOnly,\n      root = props.root,\n      initialState = props.initialState,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var editor = useRef(null);\n\n  var _useCodeMirror = useCodeMirror({\n    container: editor.current,\n    root: root,\n    value: value,\n    autoFocus: autoFocus,\n    theme: theme,\n    height: height,\n    minHeight: minHeight,\n    maxHeight: maxHeight,\n    width: width,\n    minWidth: minWidth,\n    maxWidth: maxWidth,\n    basicSetup: basicSetup,\n    placeholder: placeholder,\n    indentWithTab: indentWithTab,\n    editable: editable,\n    readOnly: readOnly,\n    selection: selection,\n    onChange: onChange,\n    onStatistics: onStatistics,\n    onCreateEditor: onCreateEditor,\n    onUpdate: onUpdate,\n    extensions: extensions,\n    initialState: initialState\n  }),\n      state = _useCodeMirror.state,\n      view = _useCodeMirror.view,\n      container = _useCodeMirror.container;\n\n  useImperativeHandle(ref, function () {\n    return {\n      editor: editor.current,\n      state: state,\n      view: view\n    };\n  }, [editor, container, state, view]); // check type of value\n\n  if (typeof value !== 'string') {\n    throw new Error(\"value must be typeof string but got \" + typeof value);\n  }\n\n  var defaultClassNames = typeof theme === 'string' ? \"cm-theme-\" + theme : 'cm-theme';\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: editor,\n    className: \"\" + defaultClassNames + (className ? \" \" + className : '')\n  }, other));\n});\nReactCodeMirror.displayName = 'CodeMirror';\nexport default ReactCodeMirror;","map":{"version":3,"sources":["/Users/sairahulpadma/Desktop/leetcodeUI/frontend/node_modules/@uiw/react-codemirror/esm/index.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","useRef","forwardRef","useImperativeHandle","useCodeMirror","jsx","_jsx","ReactCodeMirror","props","ref","className","value","selection","extensions","onChange","onStatistics","onCreateEditor","onUpdate","autoFocus","theme","height","minHeight","maxHeight","width","minWidth","maxWidth","basicSetup","placeholder","indentWithTab","editable","readOnly","root","initialState","other","editor","container","current","state","view","Error","defaultClassNames","displayName"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"value\", \"selection\", \"extensions\", \"onChange\", \"onStatistics\", \"onCreateEditor\", \"onUpdate\", \"autoFocus\", \"theme\", \"height\", \"minHeight\", \"maxHeight\", \"width\", \"minWidth\", \"maxWidth\", \"basicSetup\", \"placeholder\", \"indentWithTab\", \"editable\", \"readOnly\", \"root\", \"initialState\"];\nimport React, { useRef, forwardRef, useImperativeHandle } from 'react';\nimport { useCodeMirror } from './useCodeMirror';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport * from '@codemirror/view';\nexport * from '@codemirror/state';\nexport * from '@uiw/codemirror-extensions-basic-setup';\nexport * from './useCodeMirror';\nexport * from './getDefaultExtensions';\nexport * from './utils';\nvar ReactCodeMirror = /*#__PURE__*/forwardRef((props, ref) => {\n  var {\n      className,\n      value = '',\n      selection,\n      extensions = [],\n      onChange,\n      onStatistics,\n      onCreateEditor,\n      onUpdate,\n      autoFocus,\n      theme = 'light',\n      height,\n      minHeight,\n      maxHeight,\n      width,\n      minWidth,\n      maxWidth,\n      basicSetup,\n      placeholder,\n      indentWithTab,\n      editable,\n      readOnly,\n      root,\n      initialState\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var editor = useRef(null);\n  var {\n    state,\n    view,\n    container\n  } = useCodeMirror({\n    container: editor.current,\n    root,\n    value,\n    autoFocus,\n    theme,\n    height,\n    minHeight,\n    maxHeight,\n    width,\n    minWidth,\n    maxWidth,\n    basicSetup,\n    placeholder,\n    indentWithTab,\n    editable,\n    readOnly,\n    selection,\n    onChange,\n    onStatistics,\n    onCreateEditor,\n    onUpdate,\n    extensions,\n    initialState\n  });\n  useImperativeHandle(ref, () => ({\n    editor: editor.current,\n    state: state,\n    view: view\n  }), [editor, container, state, view]);\n\n  // check type of value\n  if (typeof value !== 'string') {\n    throw new Error(\"value must be typeof string but got \" + typeof value);\n  }\n  var defaultClassNames = typeof theme === 'string' ? \"cm-theme-\" + theme : 'cm-theme';\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: editor,\n    className: \"\" + defaultClassNames + (className ? \" \" + className : '')\n  }, other));\n});\nReactCodeMirror.displayName = 'CodeMirror';\nexport default ReactCodeMirror;"]},"metadata":{},"sourceType":"module"}