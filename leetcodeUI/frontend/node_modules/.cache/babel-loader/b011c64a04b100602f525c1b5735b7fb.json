{"ast":null,"code":"var _jsxFileName = \"/Users/sairahulpadma/Desktop/leetcodeUI/frontend/src/pages/DashboardComponent/Problems.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate\n\nimport DashboardServices from '../../services/DashboardServices';\nimport { GlobalStateContext } from '../../context/GlobalStateContext'; // Import global state context\n\nimport { TableContainer, Table, TableHead, TableRow, TableHeader, TableData, DifficultyLabel, FilterContainer, FilterLabel, FilterSelect } from \"./StyledElements\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Problems() {\n  _s();\n\n  const [problems, setProblems] = useState([]);\n  const [categoryFilter, setCategoryFilter] = useState(\"All\");\n  const [difficultyFilter, setDifficultyFilter] = useState(\"All\");\n  const navigate = useNavigate(); // Fetch all problems initially\n\n  useEffect(() => {\n    DashboardServices.getAllProblems().then(response => {\n      setProblems(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []); // Fetch problems by category filter\n\n  const fetchProblemsByCategory = category => {\n    if (category === \"All\") {\n      // Fetch all problems\n      DashboardServices.getAllProblems().then(response => {\n        setProblems(response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    } else {\n      // Fetch problems by selected category\n      DashboardServices.getProblemsByCategory(category).then(response => {\n        setProblems(response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }; // Fetch problems by difficulty filter\n\n\n  const fetchProblemsByDifficulty = difficulty => {\n    if (difficulty === \"All\") {\n      // Fetch all problems\n      DashboardServices.getAllProblems().then(response => {\n        setProblems(response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    } else {\n      // Fetch problems by selected difficulty\n      DashboardServices.getProblemsByDifficulty(difficulty).then(response => {\n        setProblems(response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  };\n\n  const handleRowClick = problemId => {\n    // Fetch the problem data by ID from the backend\n    DashboardServices.getProblemById(problemId).then(response => {\n      // Store the fetched problem data in the global state\n      const problemData = response.data;\n      dispatch({\n        type: 'SET_PROBLEM_DATA',\n        payload: problemData\n      }); // Navigate to the coding editor page once data is set\n\n      navigate(`/coding-editor/${problemId}`);\n    }).catch(error => {\n      console.error(\"Error fetching problem data:\", error);\n    });\n  }; // Handle category filter change\n\n\n  const handleCategoryChange = event => {\n    const selectedCategory = event.target.value;\n    setCategoryFilter(selectedCategory);\n    fetchProblemsByCategory(selectedCategory);\n  }; // Handle difficulty filter change\n\n\n  const handleDifficultyChange = event => {\n    const selectedDifficulty = event.target.value;\n    setDifficultyFilter(selectedDifficulty);\n    fetchProblemsByDifficulty(selectedDifficulty);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    children: [/*#__PURE__*/_jsxDEV(FilterContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(FilterLabel, {\n          style: {\n            color: \"white\"\n          },\n          children: \"Filter by Category:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilterSelect, {\n          value: categoryFilter,\n          onChange: handleCategoryChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"All\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Array\",\n            children: \"Array\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Linked List\",\n            children: \"Linked List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Dynamic Programming\",\n            children: \"Dynamic Programming\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Stack\",\n            children: \"Stack\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Binary Search\",\n            children: \"Binary Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Binary Tree\",\n            children: \"Binary Tree\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Intervals\",\n            children: \"Intervals\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Two Pointers\",\n            children: \"Two Pointers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Sliding Window\",\n            children: \"Sliding Window\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Backtracking\",\n            children: \"Backtracking\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(FilterLabel, {\n          style: {\n            color: \"white\"\n          },\n          children: \"Filter by Difficulty:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilterSelect, {\n          value: difficultyFilter,\n          onChange: handleDifficultyChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"All\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"easy\",\n            children: \"Easy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"medium\",\n            children: \"Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"hard\",\n            children: \"Hard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableHeader, {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableHeader, {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableHeader, {\n            children: \"Difficulty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableHeader, {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: problems.map(problem => /*#__PURE__*/_jsxDEV(TableRow, {\n          onClick: () => handleRowClick(problem.id),\n          children: [/*#__PURE__*/_jsxDEV(TableData, {\n            children: problem.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableData, {\n            children: problem.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableData, {\n            children: /*#__PURE__*/_jsxDEV(DifficultyLabel, {\n              difficulty: problem.difficulty,\n              children: problem.difficulty\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableData, {\n            children: problem.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this)]\n        }, problem.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Problems, \"FYjMnlewAPNMerT1woZMkUElQOQ=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Problems;\nexport default Problems;\n\nvar _c;\n\n$RefreshReg$(_c, \"Problems\");","map":{"version":3,"sources":["/Users/sairahulpadma/Desktop/leetcodeUI/frontend/src/pages/DashboardComponent/Problems.js"],"names":["React","useEffect","useState","useNavigate","DashboardServices","GlobalStateContext","TableContainer","Table","TableHead","TableRow","TableHeader","TableData","DifficultyLabel","FilterContainer","FilterLabel","FilterSelect","Problems","problems","setProblems","categoryFilter","setCategoryFilter","difficultyFilter","setDifficultyFilter","navigate","getAllProblems","then","response","data","catch","error","console","log","fetchProblemsByCategory","category","getProblemsByCategory","fetchProblemsByDifficulty","difficulty","getProblemsByDifficulty","handleRowClick","problemId","getProblemById","problemData","dispatch","type","payload","handleCategoryChange","event","selectedCategory","target","value","handleDifficultyChange","selectedDifficulty","color","map","problem","id","title","description"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate\nimport DashboardServices from '../../services/DashboardServices';\nimport { GlobalStateContext } from '../../context/GlobalStateContext'; // Import global state context\nimport {\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableData,\n  DifficultyLabel,\n  FilterContainer,\n  FilterLabel,\n  FilterSelect\n} from \"./StyledElements\";\n\nfunction Problems() {\n  const [problems, setProblems] = useState([]);\n  const [categoryFilter, setCategoryFilter] = useState(\"All\");\n  const [difficultyFilter, setDifficultyFilter] = useState(\"All\");\nconst navigate = useNavigate(); \n  // Fetch all problems initially\n  useEffect(() => {\n    DashboardServices.getAllProblems().then(response => {\n      setProblems(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n\n  // Fetch problems by category filter\n  const fetchProblemsByCategory = (category) => {\n    if (category === \"All\") {\n      // Fetch all problems\n      DashboardServices.getAllProblems().then(response => {\n        setProblems(response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    } else {\n      // Fetch problems by selected category\n      DashboardServices.getProblemsByCategory(category).then(response => {\n        setProblems(response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  };\n\n  // Fetch problems by difficulty filter\n  const fetchProblemsByDifficulty = (difficulty) => {\n    if (difficulty === \"All\") {\n      // Fetch all problems\n      DashboardServices.getAllProblems().then(response => {\n        setProblems(response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    } else {\n      // Fetch problems by selected difficulty\n      DashboardServices.getProblemsByDifficulty(difficulty).then(response => {\n        setProblems(response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  };\n\n  const handleRowClick = (problemId) => {\n    // Fetch the problem data by ID from the backend\n    DashboardServices.getProblemById(problemId)\n      .then(response => {\n        // Store the fetched problem data in the global state\n        const problemData = response.data;\n        dispatch({ type: 'SET_PROBLEM_DATA', payload: problemData });\n\n        // Navigate to the coding editor page once data is set\n        navigate(`/coding-editor/${problemId}`);\n      })\n      .catch(error => {\n        console.error(\"Error fetching problem data:\", error);\n      });\n  };\n\n  // Handle category filter change\n  const handleCategoryChange = (event) => {\n    const selectedCategory = event.target.value;\n    setCategoryFilter(selectedCategory);\n    fetchProblemsByCategory(selectedCategory);\n  };\n\n  // Handle difficulty filter change\n  const handleDifficultyChange = (event) => {\n    const selectedDifficulty = event.target.value;\n    setDifficultyFilter(selectedDifficulty);\n    fetchProblemsByDifficulty(selectedDifficulty);\n  };\n\n  return (\n    <TableContainer>\n      <FilterContainer>\n        <div>\n          <FilterLabel style={{color: \"white\"}}>Filter by Category:</FilterLabel>\n          <FilterSelect value={categoryFilter} onChange={handleCategoryChange}>\n            <option value=\"All\">All</option>\n            <option value=\"Array\">Array</option>\n            <option value=\"Linked List\">Linked List</option>\n            <option value=\"Dynamic Programming\">Dynamic Programming</option>\n            <option value=\"Stack\">Stack</option>\n            <option value=\"Binary Search\">Binary Search</option>\n            <option value=\"Binary Tree\">Binary Tree</option>\n            <option value=\"Intervals\">Intervals</option>\n            <option value=\"Two Pointers\">Two Pointers</option>\n            <option value=\"Sliding Window\">Sliding Window</option>\n            <option value=\"Backtracking\">Backtracking</option>\n          </FilterSelect>\n        </div>\n        <div>\n          <FilterLabel style={{color: \"white\"}}>Filter by Difficulty:</FilterLabel>\n          <FilterSelect value={difficultyFilter} onChange={handleDifficultyChange}>\n            <option value=\"All\">All</option>\n            <option value=\"easy\">Easy</option>\n            <option value=\"medium\">Medium</option>\n            <option value=\"hard\">Hard</option>\n          </FilterSelect>\n        </div>\n      </FilterContainer>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableHeader>Title</TableHeader>\n            <TableHeader>Description</TableHeader>\n            <TableHeader>Difficulty</TableHeader>\n            <TableHeader>Category</TableHeader>\n          </TableRow>\n        </TableHead>\n        <tbody>\n          {problems.map((problem) => (\n            <TableRow key={problem.id} onClick={() => handleRowClick(problem.id)}>\n              <TableData>{problem.title}</TableData>\n              <TableData>{problem.description}</TableData>\n              <TableData>\n                <DifficultyLabel difficulty={problem.difficulty}>\n                  {problem.difficulty}\n                </DifficultyLabel>\n              </TableData>\n              <TableData>{problem.category}</TableData>\n            </TableRow>\n          ))}\n        </tbody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default Problems;\n"]},"metadata":{},"sourceType":"module"}