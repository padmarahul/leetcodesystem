{"ast":null,"code":"var _jsxFileName = \"/Users/sairahulpadma/Desktop/leetcodeUI/frontend/src/pages/CodingEditorComponent/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { GlobalStateContext } from '../../GlobalStateContext'; // Import global state context\n\nimport axios from \"axios\";\nimport CodeMirror from '@uiw/react-codemirror';\nimport { javascript } from '@codemirror/lang-javascript'; // Import the language extension\n\nimport './CodingEditorComponent.css'; // Import custom CSS for styling\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CodingEditorComponent = () => {\n  _s();\n\n  const [state] = useContext(GlobalStateContext); // Access global state\n\n  const problem = state.problemData; // Get the selected problem data\n\n  const [code, setCode] = useState('// Write your code here');\n  const [output, setOutput] = useState(''); // Handle code submission to backend for running/compiling\n\n  const handleRunCode = () => {\n    axios.post('http://localhost:8080/run-code', {\n      code: code,\n      language: \"javascript\",\n      // You can dynamically change language\n      input: problem === null || problem === void 0 ? void 0 : problem.inputFormat // Include input data from the problem\n\n    }).then(response => {\n      setOutput(response.data.output); // Output of code execution\n    }).catch(error => {\n      console.error(\"Error running code:\", error);\n      setOutput(\"Error running code\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"coding-editor-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"problem-details\",\n      children: problem ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"problem-title\",\n          children: problem.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"problem-difficulty\",\n          children: [\"Difficulty: \", problem.difficulty]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"problem-description\",\n          children: problem.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Input Format:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: problem.inputFormat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Output Format:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: problem.outputFormat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Example Test Cases:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"test-cases\",\n          children: JSON.stringify(JSON.parse(problem.exampleTestCases), null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading problem...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Code Editor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CodeMirror, {\n        value: code,\n        height: \"500px\",\n        extensions: [javascript({\n          jsx: true\n        })] // Using the javascript extension\n        ,\n        onChange: value => setCode(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"run-code-button\",\n        onClick: handleRunCode,\n        children: \"Run Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Output:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: output\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CodingEditorComponent, \"Ps09mdwefxsYHMcdmRbG1mdJk34=\");\n\n_c = CodingEditorComponent;\nexport default CodingEditorComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"CodingEditorComponent\");","map":{"version":3,"sources":["/Users/sairahulpadma/Desktop/leetcodeUI/frontend/src/pages/CodingEditorComponent/index.js"],"names":["React","useState","useContext","GlobalStateContext","axios","CodeMirror","javascript","CodingEditorComponent","state","problem","problemData","code","setCode","output","setOutput","handleRunCode","post","language","input","inputFormat","then","response","data","catch","error","console","title","difficulty","description","outputFormat","JSON","stringify","parse","exampleTestCases","jsx","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,kBAAT,QAAmC,0BAAnC,C,CAA+D;;AAC/D,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,SAASC,UAAT,QAA2B,6BAA3B,C,CAA0D;;AAC1D,OAAO,6BAAP,C,CAAsC;;;;;AAEtC,MAAMC,qBAAqB,GAAG,MAAM;AAAA;;AAClC,QAAM,CAACC,KAAD,IAAUN,UAAU,CAACC,kBAAD,CAA1B,CADkC,CACc;;AAChD,QAAMM,OAAO,GAAGD,KAAK,CAACE,WAAtB,CAFkC,CAEC;;AACnC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,yBAAD,CAAhC;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAApC,CAJkC,CAMlC;;AACA,QAAMc,aAAa,GAAG,MAAM;AAC1BX,IAAAA,KAAK,CAACY,IAAN,CAAW,gCAAX,EAA6C;AAC3CL,MAAAA,IAAI,EAAEA,IADqC;AAE3CM,MAAAA,QAAQ,EAAE,YAFiC;AAElB;AACzBC,MAAAA,KAAK,EAAET,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEU,WAH2B,CAGf;;AAHe,KAA7C,EAIGC,IAJH,CAISC,QAAD,IAAc;AACpBP,MAAAA,SAAS,CAACO,QAAQ,CAACC,IAAT,CAAcT,MAAf,CAAT,CADoB,CACc;AACnC,KAND,EAMGU,KANH,CAMUC,KAAD,IAAW;AAClBC,MAAAA,OAAO,CAACD,KAAR,CAAc,qBAAd,EAAqCA,KAArC;AACAV,MAAAA,SAAS,CAAC,oBAAD,CAAT;AACD,KATD;AAUD,GAXD;;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA,4BAEE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,gBACGL,OAAO,gBACN;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,eAAd;AAAA,oBAA+BA,OAAO,CAACiB;AAAvC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAI,UAAA,SAAS,EAAC,oBAAd;AAAA,qCAAgDjB,OAAO,CAACkB,UAAxD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAG,UAAA,SAAS,EAAC,qBAAb;AAAA,oBAAoClB,OAAO,CAACmB;AAA5C;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAA,oBAAInB,OAAO,CAACU;AAAZ;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE;AAAA,oBAAIV,OAAO,CAACoB;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eASE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,oBAA6BC,IAAI,CAACC,SAAL,CAAeD,IAAI,CAACE,KAAL,CAAWvB,OAAO,CAACwB,gBAAnB,CAAf,EAAqD,IAArD,EAA2D,CAA3D;AAA7B;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA,sBADM,gBAaN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdJ;AAAA;AAAA;AAAA;AAAA,YAFF,eAqBE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AACE,QAAA,KAAK,EAAEtB,IADT;AAEE,QAAA,MAAM,EAAC,OAFT;AAGE,QAAA,UAAU,EAAE,CAACL,UAAU,CAAC;AAAE4B,UAAAA,GAAG,EAAE;AAAP,SAAD,CAAX,CAHd,CAG4C;AAH5C;AAIE,QAAA,QAAQ,EAAGC,KAAD,IAAWvB,OAAO,CAACuB,KAAD;AAJ9B;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,OAAO,EAAEpB,aAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eAWE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAMF;AAAN;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YArBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD,CA5DD;;GAAMN,qB;;KAAAA,qB;AA8DN,eAAeA,qBAAf","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { GlobalStateContext } from '../../GlobalStateContext'; // Import global state context\nimport axios from \"axios\";\nimport CodeMirror from '@uiw/react-codemirror';\nimport { javascript } from '@codemirror/lang-javascript'; // Import the language extension\nimport './CodingEditorComponent.css'; // Import custom CSS for styling\n\nconst CodingEditorComponent = () => {\n  const [state] = useContext(GlobalStateContext); // Access global state\n  const problem = state.problemData; // Get the selected problem data\n  const [code, setCode] = useState('// Write your code here');\n  const [output, setOutput] = useState('');\n\n  // Handle code submission to backend for running/compiling\n  const handleRunCode = () => {\n    axios.post('http://localhost:8080/run-code', {\n      code: code,\n      language: \"javascript\",  // You can dynamically change language\n      input: problem?.inputFormat // Include input data from the problem\n    }).then((response) => {\n      setOutput(response.data.output);  // Output of code execution\n    }).catch((error) => {\n      console.error(\"Error running code:\", error);\n      setOutput(\"Error running code\");\n    });\n  };\n\n  return (\n    <div className=\"coding-editor-container\">\n      {/* Left Section: Problem Details */}\n      <div className=\"problem-details\">\n        {problem ? (\n          <>\n            <h1 className=\"problem-title\">{problem.title}</h1>\n            <h3 className=\"problem-difficulty\">Difficulty: {problem.difficulty}</h3>\n            <p className=\"problem-description\">{problem.description}</p>\n            <h4>Input Format:</h4>\n            <p>{problem.inputFormat}</p>\n            <h4>Output Format:</h4>\n            <p>{problem.outputFormat}</p>\n            <h4>Example Test Cases:</h4>\n            <pre className=\"test-cases\">{JSON.stringify(JSON.parse(problem.exampleTestCases), null, 2)}</pre>\n          </>\n        ) : (\n          <p>Loading problem...</p>\n        )}\n      </div>\n\n      {/* Right Section: Code Editor */}\n      <div className=\"editor-section\">\n        <h2>Code Editor</h2>\n        <CodeMirror\n          value={code}\n          height=\"500px\"\n          extensions={[javascript({ jsx: true })]}  // Using the javascript extension\n          onChange={(value) => setCode(value)}\n        />\n        <button className=\"run-code-button\" onClick={handleRunCode}>\n          Run Code\n        </button>\n        <div className=\"output-section\">\n          <h3>Output:</h3>\n          <pre>{output}</pre>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CodingEditorComponent;\n"]},"metadata":{},"sourceType":"module"}