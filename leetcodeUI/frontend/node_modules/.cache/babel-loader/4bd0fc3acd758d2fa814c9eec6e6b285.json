{"ast":null,"code":"var _jsxFileName = \"/Users/sairahulpadma/Desktop/leetcodeUI/frontend/src/pages/DashboardComponent/Problems.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { TableContainer, Table, TableHead, TableRow, TableHeader, TableData, DifficultyLabel, FilterContainer, FilterLabel, FilterSelect } from \"./StyledElements\";\nimport DashboardServices from '../../services/DashboardServices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Problems = () => {\n  _s();\n\n  const [problems, setProblems] = useState([]);\n  const [filteredProblems, setFilteredProblems] = useState([]);\n  const [categoryFilter, setCategoryFilter] = useState(\"All\");\n  const [difficultyFilter, setDifficultyFilter] = useState(\"All\");\n  useEffect(() => {\n    fetchProblems();\n  }, []);\n\n  const fetchProblems = async () => {\n    try {\n      const response = await DashboardServices.getAllProblems();\n      setProblems(response.data);\n      setFilteredProblems(response.data);\n    } catch (error) {\n      console.error(\"Error fetching problems:\", error);\n    }\n  };\n\n  const handleCategoryFilterChange = event => {\n    const category = event.target.value;\n    setCategoryFilter(category);\n    filterProblems(category, difficultyFilter);\n  };\n\n  const handleDifficultyFilterChange = event => {\n    const difficulty = event.target.value;\n    setDifficultyFilter(difficulty);\n    filterProblems(categoryFilter, difficulty);\n  };\n\n  const filterProblems = (category, difficulty) => {\n    let filtered = problems;\n\n    if (category !== \"All\") {\n      filtered = filtered.filter(problem => problem.category === category);\n    }\n\n    if (difficulty !== \"All\") {\n      filtered = filtered.filter(problem => problem.difficulty === difficulty);\n    }\n\n    setFilteredProblems(filtered);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FilterContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(FilterLabel, {\n          children: \"Filter by Category:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilterSelect, {\n          value: categoryFilter,\n          onChange: handleCategoryFilterChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"All\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Array\",\n            children: \"Array\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Linked List\",\n            children: \"Linked List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Dynamic Programming\",\n            children: \"Dynamic Programming\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(FilterLabel, {\n          children: \"Filter by Difficulty:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilterSelect, {\n          value: difficultyFilter,\n          onChange: handleDifficultyFilterChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"All\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"easy\",\n            children: \"Easy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"medium\",\n            children: \"Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"hard\",\n            children: \"Hard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableHeader, {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableHeader, {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableHeader, {\n              children: \"Difficulty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableHeader, {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: filteredProblems.map((problem, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            index: index,\n            children: [/*#__PURE__*/_jsxDEV(TableData, {\n              children: problem.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableData, {\n              children: problem.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableData, {\n              children: /*#__PURE__*/_jsxDEV(DifficultyLabel, {\n                difficulty: problem.difficulty,\n                children: problem.difficulty\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableData, {\n              children: problem.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)]\n          }, problem.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Problems, \"h6nOCLLzPgrJDeGTPZmbNS73/Qg=\");\n\n_c = Problems;\nexport default Problems;\n\nvar _c;\n\n$RefreshReg$(_c, \"Problems\");","map":{"version":3,"sources":["/Users/sairahulpadma/Desktop/leetcodeUI/frontend/src/pages/DashboardComponent/Problems.js"],"names":["React","useState","useEffect","TableContainer","Table","TableHead","TableRow","TableHeader","TableData","DifficultyLabel","FilterContainer","FilterLabel","FilterSelect","DashboardServices","Problems","problems","setProblems","filteredProblems","setFilteredProblems","categoryFilter","setCategoryFilter","difficultyFilter","setDifficultyFilter","fetchProblems","response","getAllProblems","data","error","console","handleCategoryFilterChange","event","category","target","value","filterProblems","handleDifficultyFilterChange","difficulty","filtered","filter","problem","map","index","title","description","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableData,\n  DifficultyLabel,\n  FilterContainer,\n  FilterLabel,\n  FilterSelect,\n} from \"./StyledElements\";\nimport DashboardServices from '../../services/DashboardServices';\n\nconst Problems = () => {\n  const [problems, setProblems] = useState([]);\n  const [filteredProblems, setFilteredProblems] = useState([]);\n  const [categoryFilter, setCategoryFilter] = useState(\"All\");\n  const [difficultyFilter, setDifficultyFilter] = useState(\"All\");\n\n  useEffect(() => {\n    fetchProblems();\n  }, []);\n\n  const fetchProblems = async () => {\n    try {\n      const response = await DashboardServices.getAllProblems();\n      setProblems(response.data);\n      setFilteredProblems(response.data);\n    } catch (error) {\n      console.error(\"Error fetching problems:\", error);\n    }\n  };\n\n  const handleCategoryFilterChange = (event) => {\n    const category = event.target.value;\n    setCategoryFilter(category);\n    filterProblems(category, difficultyFilter);\n  };\n\n  const handleDifficultyFilterChange = (event) => {\n    const difficulty = event.target.value;\n    setDifficultyFilter(difficulty);\n    filterProblems(categoryFilter, difficulty);\n  };\n\n  const filterProblems = (category, difficulty) => {\n    let filtered = problems;\n\n    if (category !== \"All\") {\n      filtered = filtered.filter((problem) => problem.category === category);\n    }\n\n    if (difficulty !== \"All\") {\n      filtered = filtered.filter((problem) => problem.difficulty === difficulty);\n    }\n\n    setFilteredProblems(filtered);\n  };\n\n  return (\n    <div>\n      <FilterContainer>\n        <div>\n          <FilterLabel>Filter by Category:</FilterLabel>\n          <FilterSelect value={categoryFilter} onChange={handleCategoryFilterChange}>\n            <option value=\"All\">All</option>\n            <option value=\"Array\">Array</option>\n            <option value=\"Linked List\">Linked List</option>\n            <option value=\"Dynamic Programming\">Dynamic Programming</option>\n            {/* Add more categories as per your backend */}\n          </FilterSelect>\n        </div>\n\n        <div>\n          <FilterLabel>Filter by Difficulty:</FilterLabel>\n          <FilterSelect value={difficultyFilter} onChange={handleDifficultyFilterChange}>\n            <option value=\"All\">All</option>\n            <option value=\"easy\">Easy</option>\n            <option value=\"medium\">Medium</option>\n            <option value=\"hard\">Hard</option>\n          </FilterSelect>\n        </div>\n      </FilterContainer>\n\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableHeader>Title</TableHeader>\n              <TableHeader>Description</TableHeader>\n              <TableHeader>Difficulty</TableHeader>\n              <TableHeader>Category</TableHeader>\n            </TableRow>\n          </TableHead>\n          <tbody>\n            {filteredProblems.map((problem, index) => (\n              <TableRow key={problem.id} index={index}>\n                <TableData>{problem.title}</TableData>\n                <TableData>{problem.description}</TableData>\n                <TableData>\n                  <DifficultyLabel difficulty={problem.difficulty}>\n                    {problem.difficulty}\n                  </DifficultyLabel>\n                </TableData>\n                <TableData>{problem.category}</TableData>\n              </TableRow>\n            ))}\n          </tbody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default Problems;\n"]},"metadata":{},"sourceType":"module"}