{"ast":null,"code":"import _slicedToArray from\"/Users/sairahulpadma/Desktop/leetcodesystem/leetcodeUI/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext}from\"react\";import{GlobalStateContext}from'../../GlobalStateContext';// Import global state context\nimport axios from\"axios\";import CodeMirror from'@uiw/react-codemirror';import{javascript}from'@codemirror/lang-javascript';// Import the language extension\nimport'./CodingEditorComponent.css';// Import custom CSS for styling\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var CodingEditorComponent=function CodingEditorComponent(){var _useContext=useContext(GlobalStateContext),_useContext2=_slicedToArray(_useContext,1),state=_useContext2[0];// Access global state\nvar problem=state.problemData;// Get the selected problem data\nvar _useState=useState('// Write your code here'),_useState2=_slicedToArray(_useState,2),code=_useState2[0],setCode=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),output=_useState4[0],setOutput=_useState4[1];// Handle code submission to backend for running/compiling\nvar handleRunCode=function handleRunCode(){axios.post('http://localhost:8080/run-code',{code:code,language:\"javascript\",// You can dynamically change language\ninput:problem===null||problem===void 0?void 0:problem.inputFormat// Include input data from the problem\n}).then(function(response){setOutput(response.data.output);// Output of code execution\n}).catch(function(error){console.error(\"Error running code:\",error);setOutput(\"Error running code\");});};return/*#__PURE__*/_jsxs(\"div\",{className:\"coding-editor-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"problem-details\",children:problem?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"problem-title\",children:problem.title}),/*#__PURE__*/_jsxs(\"h3\",{className:\"problem-difficulty\",children:[\"Difficulty: \",problem.difficulty]}),/*#__PURE__*/_jsx(\"div\",{className:\"problem-description\",children:/*#__PURE__*/_jsx(\"p\",{children:problem.description})}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-format\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Input Format:\"}),/*#__PURE__*/_jsx(\"p\",{children:problem.inputFormat})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"output-format\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Output Format:\"}),/*#__PURE__*/_jsx(\"p\",{children:problem.outputFormat})]}),/*#__PURE__*/_jsx(\"h4\",{children:\"Example Test Cases:\"}),/*#__PURE__*/_jsx(\"pre\",{className:\"test-cases\",children:JSON.stringify(JSON.parse(problem.exampleTestCases),null,2)})]}):/*#__PURE__*/_jsx(\"p\",{children:\"Loading problem...\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"editor-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Code Editor\"}),/*#__PURE__*/_jsx(CodeMirror,{value:code,height:\"500px\",extensions:[javascript({jsx:true})]// Using the javascript extension\n,onChange:function onChange(value){return setCode(value);}}),/*#__PURE__*/_jsx(\"button\",{className:\"run-code-button\",onClick:handleRunCode,children:\"Run Code\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"output-section\",children:[/*#__PURE__*/_jsx(\"h3\",{style:{color:\"black\",fontWeight:\"bolder\"},children:\"Output:\"}),/*#__PURE__*/_jsx(\"pre\",{style:{color:\"black\",fontWeight:\"bolder\"},children:output})]})]})]});};export default CodingEditorComponent;","map":{"version":3,"sources":["/Users/sairahulpadma/Desktop/leetcodesystem/leetcodeUI/frontend/src/pages/CodingEditorComponent/index.js"],"names":["React","useState","useContext","GlobalStateContext","axios","CodeMirror","javascript","CodingEditorComponent","state","problem","problemData","code","setCode","output","setOutput","handleRunCode","post","language","input","inputFormat","then","response","data","catch","error","console","title","difficulty","description","outputFormat","JSON","stringify","parse","exampleTestCases","jsx","value","color","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { GlobalStateContext } from '../../GlobalStateContext'; // Import global state context\nimport axios from \"axios\";\nimport CodeMirror from '@uiw/react-codemirror';\nimport { javascript } from '@codemirror/lang-javascript'; // Import the language extension\nimport './CodingEditorComponent.css'; // Import custom CSS for styling\n\nconst CodingEditorComponent = () => {\n  const [state] = useContext(GlobalStateContext); // Access global state\n  const problem = state.problemData; // Get the selected problem data\n  const [code, setCode] = useState('// Write your code here');\n  const [output, setOutput] = useState('');\n\n  // Handle code submission to backend for running/compiling\n  const handleRunCode = () => {\n    axios.post('http://localhost:8080/run-code', {\n      code: code,\n      language: \"javascript\",  // You can dynamically change language\n      input: problem?.inputFormat // Include input data from the problem\n    }).then((response) => {\n      setOutput(response.data.output);  // Output of code execution\n    }).catch((error) => {\n      console.error(\"Error running code:\", error);\n      setOutput(\"Error running code\");\n    });\n  };\n\n  return (\n    <div className=\"coding-editor-container\">\n      {/* Left Section: Problem Details */}\n      <div className=\"problem-details\">\n        {problem ? (\n          <>\n            <h1 className=\"problem-title\">{problem.title}</h1>\n            <h3 className=\"problem-difficulty\">Difficulty: {problem.difficulty}</h3>\n            <div className=\"problem-description\">\n              <p>{problem.description}</p>\n            </div>\n            <div className=\"input-format\">\n              <h4>Input Format:</h4>\n              <p>{problem.inputFormat}</p>\n            </div>\n            <div className=\"output-format\">\n              <h4>Output Format:</h4>\n              <p>{problem.outputFormat}</p>\n            </div>\n            <h4>Example Test Cases:</h4>\n            <pre className=\"test-cases\">{JSON.stringify(JSON.parse(problem.exampleTestCases), null, 2)}</pre>\n          </>\n        ) : (\n          <p>Loading problem...</p>\n        )}\n      </div>\n\n      {/* Right Section: Code Editor */}\n      <div className=\"editor-section\">\n        <h2>Code Editor</h2>\n        <CodeMirror\n          value={code}\n          height=\"500px\"\n          extensions={[javascript({ jsx: true })]}  // Using the javascript extension\n          onChange={(value) => setCode(value)}\n        />\n        <button className=\"run-code-button\" onClick={handleRunCode}>\n          Run Code\n        </button>\n        <div className=\"output-section\">\n          <h3 style={{color: \"black\", fontWeight:\"bolder\"}}>Output:</h3>\n          <pre style={{color: \"black\", fontWeight:\"bolder\"}}>{output}</pre>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CodingEditorComponent;\n"]},"metadata":{},"sourceType":"module"}