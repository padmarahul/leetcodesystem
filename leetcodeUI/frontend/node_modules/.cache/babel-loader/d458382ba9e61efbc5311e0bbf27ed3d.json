{"ast":null,"code":"import { Decoration, showPanel, EditorView, ViewPlugin, gutter, showTooltip, hoverTooltip, getPanel, logException, WidgetType, GutterMarker } from '@codemirror/view';\nimport { StateEffect, StateField, Facet, combineConfig, RangeSet } from '@codemirror/state';\nimport elt from 'crelt';\n\nclass SelectedDiagnostic {\n  constructor(from, to, diagnostic) {\n    this.from = from;\n    this.to = to;\n    this.diagnostic = diagnostic;\n  }\n\n}\n\nclass LintState {\n  constructor(diagnostics, panel, selected) {\n    this.diagnostics = diagnostics;\n    this.panel = panel;\n    this.selected = selected;\n  }\n\n  static init(diagnostics, panel, state) {\n    // Filter the list of diagnostics for which to create markers\n    let markedDiagnostics = diagnostics;\n    let diagnosticFilter = state.facet(lintConfig).markerFilter;\n    if (diagnosticFilter) markedDiagnostics = diagnosticFilter(markedDiagnostics, state);\n    let ranges = Decoration.set(markedDiagnostics.map(d => {\n      // For zero-length ranges or ranges covering only a line break, create a widget\n      return d.from == d.to || d.from == d.to - 1 && state.doc.lineAt(d.from).to == d.from ? Decoration.widget({\n        widget: new DiagnosticWidget(d),\n        diagnostic: d\n      }).range(d.from) : Decoration.mark({\n        attributes: {\n          class: \"cm-lintRange cm-lintRange-\" + d.severity + (d.markClass ? \" \" + d.markClass : \"\")\n        },\n        diagnostic: d\n      }).range(d.from, d.to);\n    }), true);\n    return new LintState(ranges, panel, findDiagnostic(ranges));\n  }\n\n}\n\nfunction findDiagnostic(diagnostics, diagnostic = null, after = 0) {\n  let found = null;\n  diagnostics.between(after, 1e9, (from, to, {\n    spec\n  }) => {\n    if (diagnostic && spec.diagnostic != diagnostic) return;\n    found = new SelectedDiagnostic(from, to, spec.diagnostic);\n    return false;\n  });\n  return found;\n}\n\nfunction hideTooltip(tr, tooltip) {\n  let from = tooltip.pos,\n      to = tooltip.end || from;\n  let result = tr.state.facet(lintConfig).hideOn(tr, from, to);\n  if (result != null) return result;\n  let line = tr.startState.doc.lineAt(tooltip.pos);\n  return !!(tr.effects.some(e => e.is(setDiagnosticsEffect)) || tr.changes.touchesRange(line.from, Math.max(line.to, to)));\n}\n\nfunction maybeEnableLint(state, effects) {\n  return state.field(lintState, false) ? effects : effects.concat(StateEffect.appendConfig.of(lintExtensions));\n}\n/**\nReturns a transaction spec which updates the current set of\ndiagnostics, and enables the lint extension if if wasn't already\nactive.\n*/\n\n\nfunction setDiagnostics(state, diagnostics) {\n  return {\n    effects: maybeEnableLint(state, [setDiagnosticsEffect.of(diagnostics)])\n  };\n}\n/**\nThe state effect that updates the set of active diagnostics. Can\nbe useful when writing an extension that needs to track these.\n*/\n\n\nconst setDiagnosticsEffect = /*@__PURE__*/StateEffect.define();\nconst togglePanel = /*@__PURE__*/StateEffect.define();\nconst movePanelSelection = /*@__PURE__*/StateEffect.define();\nconst lintState = /*@__PURE__*/StateField.define({\n  create() {\n    return new LintState(Decoration.none, null, null);\n  },\n\n  update(value, tr) {\n    if (tr.docChanged && value.diagnostics.size) {\n      let mapped = value.diagnostics.map(tr.changes),\n          selected = null,\n          panel = value.panel;\n\n      if (value.selected) {\n        let selPos = tr.changes.mapPos(value.selected.from, 1);\n        selected = findDiagnostic(mapped, value.selected.diagnostic, selPos) || findDiagnostic(mapped, null, selPos);\n      }\n\n      if (!mapped.size && panel && tr.state.facet(lintConfig).autoPanel) panel = null;\n      value = new LintState(mapped, panel, selected);\n    }\n\n    for (let effect of tr.effects) {\n      if (effect.is(setDiagnosticsEffect)) {\n        let panel = !tr.state.facet(lintConfig).autoPanel ? value.panel : effect.value.length ? LintPanel.open : null;\n        value = LintState.init(effect.value, panel, tr.state);\n      } else if (effect.is(togglePanel)) {\n        value = new LintState(value.diagnostics, effect.value ? LintPanel.open : null, value.selected);\n      } else if (effect.is(movePanelSelection)) {\n        value = new LintState(value.diagnostics, value.panel, effect.value);\n      }\n    }\n\n    return value;\n  },\n\n  provide: f => [showPanel.from(f, val => val.panel), EditorView.decorations.from(f, s => s.diagnostics)]\n});\n/**\nReturns the number of active lint diagnostics in the given state.\n*/\n\nfunction diagnosticCount(state) {\n  let lint = state.field(lintState, false);\n  return lint ? lint.diagnostics.size : 0;\n}\n\nconst activeMark = /*@__PURE__*/Decoration.mark({\n  class: \"cm-lintRange cm-lintRange-active\"\n});\n\nfunction lintTooltip(view, pos, side) {\n  let {\n    diagnostics\n  } = view.state.field(lintState);\n  let found = [],\n      stackStart = 2e8,\n      stackEnd = 0;\n  diagnostics.between(pos - (side < 0 ? 1 : 0), pos + (side > 0 ? 1 : 0), (from, to, {\n    spec\n  }) => {\n    if (pos >= from && pos <= to && (from == to || (pos > from || side > 0) && (pos < to || side < 0))) {\n      found.push(spec.diagnostic);\n      stackStart = Math.min(from, stackStart);\n      stackEnd = Math.max(to, stackEnd);\n    }\n  });\n  let diagnosticFilter = view.state.facet(lintConfig).tooltipFilter;\n  if (diagnosticFilter) found = diagnosticFilter(found, view.state);\n  if (!found.length) return null;\n  return {\n    pos: stackStart,\n    end: stackEnd,\n    above: view.state.doc.lineAt(stackStart).to < stackEnd,\n\n    create() {\n      return {\n        dom: diagnosticsTooltip(view, found)\n      };\n    }\n\n  };\n}\n\nfunction diagnosticsTooltip(view, diagnostics) {\n  return elt(\"ul\", {\n    class: \"cm-tooltip-lint\"\n  }, diagnostics.map(d => renderDiagnostic(view, d, false)));\n}\n/**\nCommand to open and focus the lint panel.\n*/\n\n\nconst openLintPanel = view => {\n  let field = view.state.field(lintState, false);\n  if (!field || !field.panel) view.dispatch({\n    effects: maybeEnableLint(view.state, [togglePanel.of(true)])\n  });\n  let panel = getPanel(view, LintPanel.open);\n  if (panel) panel.dom.querySelector(\".cm-panel-lint ul\").focus();\n  return true;\n};\n/**\nCommand to close the lint panel, when open.\n*/\n\n\nconst closeLintPanel = view => {\n  let field = view.state.field(lintState, false);\n  if (!field || !field.panel) return false;\n  view.dispatch({\n    effects: togglePanel.of(false)\n  });\n  return true;\n};\n/**\nMove the selection to the next diagnostic.\n*/\n\n\nconst nextDiagnostic = view => {\n  let field = view.state.field(lintState, false);\n  if (!field) return false;\n  let sel = view.state.selection.main,\n      next = field.diagnostics.iter(sel.to + 1);\n\n  if (!next.value) {\n    next = field.diagnostics.iter(0);\n    if (!next.value || next.from == sel.from && next.to == sel.to) return false;\n  }\n\n  view.dispatch({\n    selection: {\n      anchor: next.from,\n      head: next.to\n    },\n    scrollIntoView: true\n  });\n  return true;\n};\n/**\nMove the selection to the previous diagnostic.\n*/\n\n\nconst previousDiagnostic = view => {\n  let {\n    state\n  } = view,\n      field = state.field(lintState, false);\n  if (!field) return false;\n  let sel = state.selection.main;\n  let prevFrom, prevTo, lastFrom, lastTo;\n  field.diagnostics.between(0, state.doc.length, (from, to) => {\n    if (to < sel.to && (prevFrom == null || prevFrom < from)) {\n      prevFrom = from;\n      prevTo = to;\n    }\n\n    if (lastFrom == null || from > lastFrom) {\n      lastFrom = from;\n      lastTo = to;\n    }\n  });\n  if (lastFrom == null || prevFrom == null && lastFrom == sel.from) return false;\n  view.dispatch({\n    selection: {\n      anchor: prevFrom !== null && prevFrom !== void 0 ? prevFrom : lastFrom,\n      head: prevTo !== null && prevTo !== void 0 ? prevTo : lastTo\n    },\n    scrollIntoView: true\n  });\n  return true;\n};\n/**\nA set of default key bindings for the lint functionality.\n\n- Ctrl-Shift-m (Cmd-Shift-m on macOS): [`openLintPanel`](https://codemirror.net/6/docs/ref/#lint.openLintPanel)\n- F8: [`nextDiagnostic`](https://codemirror.net/6/docs/ref/#lint.nextDiagnostic)\n*/\n\n\nconst lintKeymap = [{\n  key: \"Mod-Shift-m\",\n  run: openLintPanel,\n  preventDefault: true\n}, {\n  key: \"F8\",\n  run: nextDiagnostic\n}];\nconst lintPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n  constructor(view) {\n    this.view = view;\n    this.timeout = -1;\n    this.set = true;\n    let {\n      delay\n    } = view.state.facet(lintConfig);\n    this.lintTime = Date.now() + delay;\n    this.run = this.run.bind(this);\n    this.timeout = setTimeout(this.run, delay);\n  }\n\n  run() {\n    clearTimeout(this.timeout);\n    let now = Date.now();\n\n    if (now < this.lintTime - 10) {\n      this.timeout = setTimeout(this.run, this.lintTime - now);\n    } else {\n      this.set = false;\n      let {\n        state\n      } = this.view,\n          {\n        sources\n      } = state.facet(lintConfig);\n      if (sources.length) batchResults(sources.map(s => Promise.resolve(s(this.view))), annotations => {\n        if (this.view.state.doc == state.doc) this.view.dispatch(setDiagnostics(this.view.state, annotations.reduce((a, b) => a.concat(b))));\n      }, error => {\n        logException(this.view.state, error);\n      });\n    }\n  }\n\n  update(update) {\n    let config = update.state.facet(lintConfig);\n\n    if (update.docChanged || config != update.startState.facet(lintConfig) || config.needsRefresh && config.needsRefresh(update)) {\n      this.lintTime = Date.now() + config.delay;\n\n      if (!this.set) {\n        this.set = true;\n        this.timeout = setTimeout(this.run, config.delay);\n      }\n    }\n  }\n\n  force() {\n    if (this.set) {\n      this.lintTime = Date.now();\n      this.run();\n    }\n  }\n\n  destroy() {\n    clearTimeout(this.timeout);\n  }\n\n});\n\nfunction batchResults(promises, sink, error) {\n  let collected = [],\n      timeout = -1;\n\n  for (let p of promises) p.then(value => {\n    collected.push(value);\n    clearTimeout(timeout);\n    if (collected.length == promises.length) sink(collected);else setTimeout(() => sink(collected), 200);\n  }, error);\n}\n\nconst lintConfig = /*@__PURE__*/Facet.define({\n  combine(input) {\n    return Object.assign({\n      sources: input.map(i => i.source).filter(x => x != null)\n    }, combineConfig(input.map(i => i.config), {\n      delay: 750,\n      markerFilter: null,\n      tooltipFilter: null,\n      needsRefresh: null,\n      hideOn: () => null\n    }, {\n      needsRefresh: (a, b) => !a ? b : !b ? a : u => a(u) || b(u)\n    }));\n  }\n\n});\n/**\nGiven a diagnostic source, this function returns an extension that\nenables linting with that source. It will be called whenever the\neditor is idle (after its content changed). If `null` is given as\nsource, this only configures the lint extension.\n*/\n\nfunction linter(source, config = {}) {\n  return [lintConfig.of({\n    source,\n    config\n  }), lintPlugin, lintExtensions];\n}\n/**\nForces any linters [configured](https://codemirror.net/6/docs/ref/#lint.linter) to run when the\neditor is idle to run right away.\n*/\n\n\nfunction forceLinting(view) {\n  let plugin = view.plugin(lintPlugin);\n  if (plugin) plugin.force();\n}\n\nfunction assignKeys(actions) {\n  let assigned = [];\n  if (actions) actions: for (let {\n    name\n  } of actions) {\n    for (let i = 0; i < name.length; i++) {\n      let ch = name[i];\n\n      if (/[a-zA-Z]/.test(ch) && !assigned.some(c => c.toLowerCase() == ch.toLowerCase())) {\n        assigned.push(ch);\n        continue actions;\n      }\n    }\n\n    assigned.push(\"\");\n  }\n  return assigned;\n}\n\nfunction renderDiagnostic(view, diagnostic, inPanel) {\n  var _a;\n\n  let keys = inPanel ? assignKeys(diagnostic.actions) : [];\n  return elt(\"li\", {\n    class: \"cm-diagnostic cm-diagnostic-\" + diagnostic.severity\n  }, elt(\"span\", {\n    class: \"cm-diagnosticText\"\n  }, diagnostic.renderMessage ? diagnostic.renderMessage(view) : diagnostic.message), (_a = diagnostic.actions) === null || _a === void 0 ? void 0 : _a.map((action, i) => {\n    let fired = false,\n        click = e => {\n      e.preventDefault();\n      if (fired) return;\n      fired = true;\n      let found = findDiagnostic(view.state.field(lintState).diagnostics, diagnostic);\n      if (found) action.apply(view, found.from, found.to);\n    };\n\n    let {\n      name\n    } = action,\n        keyIndex = keys[i] ? name.indexOf(keys[i]) : -1;\n    let nameElt = keyIndex < 0 ? name : [name.slice(0, keyIndex), elt(\"u\", name.slice(keyIndex, keyIndex + 1)), name.slice(keyIndex + 1)];\n    return elt(\"button\", {\n      type: \"button\",\n      class: \"cm-diagnosticAction\",\n      onclick: click,\n      onmousedown: click,\n      \"aria-label\": ` Action: ${name}${keyIndex < 0 ? \"\" : ` (access key \"${keys[i]})\"`}.`\n    }, nameElt);\n  }), diagnostic.source && elt(\"div\", {\n    class: \"cm-diagnosticSource\"\n  }, diagnostic.source));\n}\n\nclass DiagnosticWidget extends WidgetType {\n  constructor(diagnostic) {\n    super();\n    this.diagnostic = diagnostic;\n  }\n\n  eq(other) {\n    return other.diagnostic == this.diagnostic;\n  }\n\n  toDOM() {\n    return elt(\"span\", {\n      class: \"cm-lintPoint cm-lintPoint-\" + this.diagnostic.severity\n    });\n  }\n\n}\n\nclass PanelItem {\n  constructor(view, diagnostic) {\n    this.diagnostic = diagnostic;\n    this.id = \"item_\" + Math.floor(Math.random() * 0xffffffff).toString(16);\n    this.dom = renderDiagnostic(view, diagnostic, true);\n    this.dom.id = this.id;\n    this.dom.setAttribute(\"role\", \"option\");\n  }\n\n}\n\nclass LintPanel {\n  constructor(view) {\n    this.view = view;\n    this.items = [];\n\n    let onkeydown = event => {\n      if (event.keyCode == 27) {\n        // Escape\n        closeLintPanel(this.view);\n        this.view.focus();\n      } else if (event.keyCode == 38 || event.keyCode == 33) {\n        // ArrowUp, PageUp\n        this.moveSelection((this.selectedIndex - 1 + this.items.length) % this.items.length);\n      } else if (event.keyCode == 40 || event.keyCode == 34) {\n        // ArrowDown, PageDown\n        this.moveSelection((this.selectedIndex + 1) % this.items.length);\n      } else if (event.keyCode == 36) {\n        // Home\n        this.moveSelection(0);\n      } else if (event.keyCode == 35) {\n        // End\n        this.moveSelection(this.items.length - 1);\n      } else if (event.keyCode == 13) {\n        // Enter\n        this.view.focus();\n      } else if (event.keyCode >= 65 && event.keyCode <= 90 && this.selectedIndex >= 0) {\n        // A-Z\n        let {\n          diagnostic\n        } = this.items[this.selectedIndex],\n            keys = assignKeys(diagnostic.actions);\n\n        for (let i = 0; i < keys.length; i++) if (keys[i].toUpperCase().charCodeAt(0) == event.keyCode) {\n          let found = findDiagnostic(this.view.state.field(lintState).diagnostics, diagnostic);\n          if (found) diagnostic.actions[i].apply(view, found.from, found.to);\n        }\n      } else {\n        return;\n      }\n\n      event.preventDefault();\n    };\n\n    let onclick = event => {\n      for (let i = 0; i < this.items.length; i++) {\n        if (this.items[i].dom.contains(event.target)) this.moveSelection(i);\n      }\n    };\n\n    this.list = elt(\"ul\", {\n      tabIndex: 0,\n      role: \"listbox\",\n      \"aria-label\": this.view.state.phrase(\"Diagnostics\"),\n      onkeydown,\n      onclick\n    });\n    this.dom = elt(\"div\", {\n      class: \"cm-panel-lint\"\n    }, this.list, elt(\"button\", {\n      type: \"button\",\n      name: \"close\",\n      \"aria-label\": this.view.state.phrase(\"close\"),\n      onclick: () => closeLintPanel(this.view)\n    }, \"×\"));\n    this.update();\n  }\n\n  get selectedIndex() {\n    let selected = this.view.state.field(lintState).selected;\n    if (!selected) return -1;\n\n    for (let i = 0; i < this.items.length; i++) if (this.items[i].diagnostic == selected.diagnostic) return i;\n\n    return -1;\n  }\n\n  update() {\n    let {\n      diagnostics,\n      selected\n    } = this.view.state.field(lintState);\n    let i = 0,\n        needsSync = false,\n        newSelectedItem = null;\n    diagnostics.between(0, this.view.state.doc.length, (_start, _end, {\n      spec\n    }) => {\n      let found = -1,\n          item;\n\n      for (let j = i; j < this.items.length; j++) if (this.items[j].diagnostic == spec.diagnostic) {\n        found = j;\n        break;\n      }\n\n      if (found < 0) {\n        item = new PanelItem(this.view, spec.diagnostic);\n        this.items.splice(i, 0, item);\n        needsSync = true;\n      } else {\n        item = this.items[found];\n\n        if (found > i) {\n          this.items.splice(i, found - i);\n          needsSync = true;\n        }\n      }\n\n      if (selected && item.diagnostic == selected.diagnostic) {\n        if (!item.dom.hasAttribute(\"aria-selected\")) {\n          item.dom.setAttribute(\"aria-selected\", \"true\");\n          newSelectedItem = item;\n        }\n      } else if (item.dom.hasAttribute(\"aria-selected\")) {\n        item.dom.removeAttribute(\"aria-selected\");\n      }\n\n      i++;\n    });\n\n    while (i < this.items.length && !(this.items.length == 1 && this.items[0].diagnostic.from < 0)) {\n      needsSync = true;\n      this.items.pop();\n    }\n\n    if (this.items.length == 0) {\n      this.items.push(new PanelItem(this.view, {\n        from: -1,\n        to: -1,\n        severity: \"info\",\n        message: this.view.state.phrase(\"No diagnostics\")\n      }));\n      needsSync = true;\n    }\n\n    if (newSelectedItem) {\n      this.list.setAttribute(\"aria-activedescendant\", newSelectedItem.id);\n      this.view.requestMeasure({\n        key: this,\n        read: () => ({\n          sel: newSelectedItem.dom.getBoundingClientRect(),\n          panel: this.list.getBoundingClientRect()\n        }),\n        write: ({\n          sel,\n          panel\n        }) => {\n          let scaleY = panel.height / this.list.offsetHeight;\n          if (sel.top < panel.top) this.list.scrollTop -= (panel.top - sel.top) / scaleY;else if (sel.bottom > panel.bottom) this.list.scrollTop += (sel.bottom - panel.bottom) / scaleY;\n        }\n      });\n    } else if (this.selectedIndex < 0) {\n      this.list.removeAttribute(\"aria-activedescendant\");\n    }\n\n    if (needsSync) this.sync();\n  }\n\n  sync() {\n    let domPos = this.list.firstChild;\n\n    function rm() {\n      let prev = domPos;\n      domPos = prev.nextSibling;\n      prev.remove();\n    }\n\n    for (let item of this.items) {\n      if (item.dom.parentNode == this.list) {\n        while (domPos != item.dom) rm();\n\n        domPos = item.dom.nextSibling;\n      } else {\n        this.list.insertBefore(item.dom, domPos);\n      }\n    }\n\n    while (domPos) rm();\n  }\n\n  moveSelection(selectedIndex) {\n    if (this.selectedIndex < 0) return;\n    let field = this.view.state.field(lintState);\n    let selection = findDiagnostic(field.diagnostics, this.items[selectedIndex].diagnostic);\n    if (!selection) return;\n    this.view.dispatch({\n      selection: {\n        anchor: selection.from,\n        head: selection.to\n      },\n      scrollIntoView: true,\n      effects: movePanelSelection.of(selection)\n    });\n  }\n\n  static open(view) {\n    return new LintPanel(view);\n  }\n\n}\n\nfunction svg(content, attrs = `viewBox=\"0 0 40 40\"`) {\n  return `url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" ${attrs}>${encodeURIComponent(content)}</svg>')`;\n}\n\nfunction underline(color) {\n  return svg(`<path d=\"m0 2.5 l2 -1.5 l1 0 l2 1.5 l1 0\" stroke=\"${color}\" fill=\"none\" stroke-width=\".7\"/>`, `width=\"6\" height=\"3\"`);\n}\n\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n  \".cm-diagnostic\": {\n    padding: \"3px 6px 3px 8px\",\n    marginLeft: \"-1px\",\n    display: \"block\",\n    whiteSpace: \"pre-wrap\"\n  },\n  \".cm-diagnostic-error\": {\n    borderLeft: \"5px solid #d11\"\n  },\n  \".cm-diagnostic-warning\": {\n    borderLeft: \"5px solid orange\"\n  },\n  \".cm-diagnostic-info\": {\n    borderLeft: \"5px solid #999\"\n  },\n  \".cm-diagnostic-hint\": {\n    borderLeft: \"5px solid #66d\"\n  },\n  \".cm-diagnosticAction\": {\n    font: \"inherit\",\n    border: \"none\",\n    padding: \"2px 4px\",\n    backgroundColor: \"#444\",\n    color: \"white\",\n    borderRadius: \"3px\",\n    marginLeft: \"8px\",\n    cursor: \"pointer\"\n  },\n  \".cm-diagnosticSource\": {\n    fontSize: \"70%\",\n    opacity: .7\n  },\n  \".cm-lintRange\": {\n    backgroundPosition: \"left bottom\",\n    backgroundRepeat: \"repeat-x\",\n    paddingBottom: \"0.7px\"\n  },\n  \".cm-lintRange-error\": {\n    backgroundImage: /*@__PURE__*/underline(\"#d11\")\n  },\n  \".cm-lintRange-warning\": {\n    backgroundImage: /*@__PURE__*/underline(\"orange\")\n  },\n  \".cm-lintRange-info\": {\n    backgroundImage: /*@__PURE__*/underline(\"#999\")\n  },\n  \".cm-lintRange-hint\": {\n    backgroundImage: /*@__PURE__*/underline(\"#66d\")\n  },\n  \".cm-lintRange-active\": {\n    backgroundColor: \"#ffdd9980\"\n  },\n  \".cm-tooltip-lint\": {\n    padding: 0,\n    margin: 0\n  },\n  \".cm-lintPoint\": {\n    position: \"relative\",\n    \"&:after\": {\n      content: '\"\"',\n      position: \"absolute\",\n      bottom: 0,\n      left: \"-2px\",\n      borderLeft: \"3px solid transparent\",\n      borderRight: \"3px solid transparent\",\n      borderBottom: \"4px solid #d11\"\n    }\n  },\n  \".cm-lintPoint-warning\": {\n    \"&:after\": {\n      borderBottomColor: \"orange\"\n    }\n  },\n  \".cm-lintPoint-info\": {\n    \"&:after\": {\n      borderBottomColor: \"#999\"\n    }\n  },\n  \".cm-lintPoint-hint\": {\n    \"&:after\": {\n      borderBottomColor: \"#66d\"\n    }\n  },\n  \".cm-panel.cm-panel-lint\": {\n    position: \"relative\",\n    \"& ul\": {\n      maxHeight: \"100px\",\n      overflowY: \"auto\",\n      \"& [aria-selected]\": {\n        backgroundColor: \"#ddd\",\n        \"& u\": {\n          textDecoration: \"underline\"\n        }\n      },\n      \"&:focus [aria-selected]\": {\n        background_fallback: \"#bdf\",\n        backgroundColor: \"Highlight\",\n        color_fallback: \"white\",\n        color: \"HighlightText\"\n      },\n      \"& u\": {\n        textDecoration: \"none\"\n      },\n      padding: 0,\n      margin: 0\n    },\n    \"& [name=close]\": {\n      position: \"absolute\",\n      top: \"0\",\n      right: \"2px\",\n      background: \"inherit\",\n      border: \"none\",\n      font: \"inherit\",\n      padding: 0,\n      margin: 0\n    }\n  }\n});\n\nfunction severityWeight(sev) {\n  return sev == \"error\" ? 4 : sev == \"warning\" ? 3 : sev == \"info\" ? 2 : 1;\n}\n\nclass LintGutterMarker extends GutterMarker {\n  constructor(diagnostics) {\n    super();\n    this.diagnostics = diagnostics;\n    this.severity = diagnostics.reduce((max, d) => severityWeight(max) < severityWeight(d.severity) ? d.severity : max, \"hint\");\n  }\n\n  toDOM(view) {\n    let elt = document.createElement(\"div\");\n    elt.className = \"cm-lint-marker cm-lint-marker-\" + this.severity;\n    let diagnostics = this.diagnostics;\n    let diagnosticsFilter = view.state.facet(lintGutterConfig).tooltipFilter;\n    if (diagnosticsFilter) diagnostics = diagnosticsFilter(diagnostics, view.state);\n    if (diagnostics.length) elt.onmouseover = () => gutterMarkerMouseOver(view, elt, diagnostics);\n    return elt;\n  }\n\n}\n\nfunction trackHoverOn(view, marker) {\n  let mousemove = event => {\n    let rect = marker.getBoundingClientRect();\n    if (event.clientX > rect.left - 10\n    /* Hover.Margin */\n    && event.clientX < rect.right + 10\n    /* Hover.Margin */\n    && event.clientY > rect.top - 10\n    /* Hover.Margin */\n    && event.clientY < rect.bottom + 10\n    /* Hover.Margin */\n    ) return;\n\n    for (let target = event.target; target; target = target.parentNode) {\n      if (target.nodeType == 1 && target.classList.contains(\"cm-tooltip-lint\")) return;\n    }\n\n    window.removeEventListener(\"mousemove\", mousemove);\n    if (view.state.field(lintGutterTooltip)) view.dispatch({\n      effects: setLintGutterTooltip.of(null)\n    });\n  };\n\n  window.addEventListener(\"mousemove\", mousemove);\n}\n\nfunction gutterMarkerMouseOver(view, marker, diagnostics) {\n  function hovered() {\n    let line = view.elementAtHeight(marker.getBoundingClientRect().top + 5 - view.documentTop);\n    const linePos = view.coordsAtPos(line.from);\n\n    if (linePos) {\n      view.dispatch({\n        effects: setLintGutterTooltip.of({\n          pos: line.from,\n          above: false,\n\n          create() {\n            return {\n              dom: diagnosticsTooltip(view, diagnostics),\n              getCoords: () => marker.getBoundingClientRect()\n            };\n          }\n\n        })\n      });\n    }\n\n    marker.onmouseout = marker.onmousemove = null;\n    trackHoverOn(view, marker);\n  }\n\n  let {\n    hoverTime\n  } = view.state.facet(lintGutterConfig);\n  let hoverTimeout = setTimeout(hovered, hoverTime);\n\n  marker.onmouseout = () => {\n    clearTimeout(hoverTimeout);\n    marker.onmouseout = marker.onmousemove = null;\n  };\n\n  marker.onmousemove = () => {\n    clearTimeout(hoverTimeout);\n    hoverTimeout = setTimeout(hovered, hoverTime);\n  };\n}\n\nfunction markersForDiagnostics(doc, diagnostics) {\n  let byLine = Object.create(null);\n\n  for (let diagnostic of diagnostics) {\n    let line = doc.lineAt(diagnostic.from);\n    (byLine[line.from] || (byLine[line.from] = [])).push(diagnostic);\n  }\n\n  let markers = [];\n\n  for (let line in byLine) {\n    markers.push(new LintGutterMarker(byLine[line]).range(+line));\n  }\n\n  return RangeSet.of(markers, true);\n}\n\nconst lintGutterExtension = /*@__PURE__*/gutter({\n  class: \"cm-gutter-lint\",\n  markers: view => view.state.field(lintGutterMarkers),\n  widgetMarker: (view, widget, block) => {\n    let diagnostics = [];\n    view.state.field(lintGutterMarkers).between(block.from, block.to, (from, to, value) => {\n      diagnostics.push(...value.diagnostics);\n    });\n    return diagnostics.length ? new LintGutterMarker(diagnostics) : null;\n  }\n});\nconst lintGutterMarkers = /*@__PURE__*/StateField.define({\n  create() {\n    return RangeSet.empty;\n  },\n\n  update(markers, tr) {\n    markers = markers.map(tr.changes);\n    let diagnosticFilter = tr.state.facet(lintGutterConfig).markerFilter;\n\n    for (let effect of tr.effects) {\n      if (effect.is(setDiagnosticsEffect)) {\n        let diagnostics = effect.value;\n        if (diagnosticFilter) diagnostics = diagnosticFilter(diagnostics || [], tr.state);\n        markers = markersForDiagnostics(tr.state.doc, diagnostics.slice(0));\n      }\n    }\n\n    return markers;\n  }\n\n});\nconst setLintGutterTooltip = /*@__PURE__*/StateEffect.define();\nconst lintGutterTooltip = /*@__PURE__*/StateField.define({\n  create() {\n    return null;\n  },\n\n  update(tooltip, tr) {\n    if (tooltip && tr.docChanged) tooltip = hideTooltip(tr, tooltip) ? null : Object.assign(Object.assign({}, tooltip), {\n      pos: tr.changes.mapPos(tooltip.pos)\n    });\n    return tr.effects.reduce((t, e) => e.is(setLintGutterTooltip) ? e.value : t, tooltip);\n  },\n\n  provide: field => showTooltip.from(field)\n});\nconst lintGutterTheme = /*@__PURE__*/EditorView.baseTheme({\n  \".cm-gutter-lint\": {\n    width: \"1.4em\",\n    \"& .cm-gutterElement\": {\n      padding: \".2em\"\n    }\n  },\n  \".cm-lint-marker\": {\n    width: \"1em\",\n    height: \"1em\"\n  },\n  \".cm-lint-marker-info\": {\n    content: /*@__PURE__*/svg(`<path fill=\"#aaf\" stroke=\"#77e\" stroke-width=\"6\" stroke-linejoin=\"round\" d=\"M5 5L35 5L35 35L5 35Z\"/>`)\n  },\n  \".cm-lint-marker-warning\": {\n    content: /*@__PURE__*/svg(`<path fill=\"#fe8\" stroke=\"#fd7\" stroke-width=\"6\" stroke-linejoin=\"round\" d=\"M20 6L37 35L3 35Z\"/>`)\n  },\n  \".cm-lint-marker-error\": {\n    content: /*@__PURE__*/svg(`<circle cx=\"20\" cy=\"20\" r=\"15\" fill=\"#f87\" stroke=\"#f43\" stroke-width=\"6\"/>`)\n  }\n});\nconst lintExtensions = [lintState, /*@__PURE__*/EditorView.decorations.compute([lintState], state => {\n  let {\n    selected,\n    panel\n  } = state.field(lintState);\n  return !selected || !panel || selected.from == selected.to ? Decoration.none : Decoration.set([activeMark.range(selected.from, selected.to)]);\n}), /*@__PURE__*/hoverTooltip(lintTooltip, {\n  hideOn: hideTooltip\n}), baseTheme];\nconst lintGutterConfig = /*@__PURE__*/Facet.define({\n  combine(configs) {\n    return combineConfig(configs, {\n      hoverTime: 300\n      /* Hover.Time */\n      ,\n      markerFilter: null,\n      tooltipFilter: null\n    });\n  }\n\n});\n/**\nReturns an extension that installs a gutter showing markers for\neach line that has diagnostics, which can be hovered over to see\nthe diagnostics.\n*/\n\nfunction lintGutter(config = {}) {\n  return [lintGutterConfig.of(config), lintGutterMarkers, lintGutterExtension, lintGutterTheme, lintGutterTooltip];\n}\n/**\nIterate over the marked diagnostics for the given editor state,\ncalling `f` for each of them. Note that, if the document changed\nsince the diagnostics were created, the `Diagnostic` object will\nhold the original outdated position, whereas the `to` and `from`\narguments hold the diagnostic's current position.\n*/\n\n\nfunction forEachDiagnostic(state, f) {\n  let lState = state.field(lintState, false);\n  if (lState && lState.diagnostics.size) for (let iter = RangeSet.iter([lState.diagnostics]); iter.value; iter.next()) f(iter.value.spec.diagnostic, iter.from, iter.to);\n}\n\nexport { closeLintPanel, diagnosticCount, forEachDiagnostic, forceLinting, lintGutter, lintKeymap, linter, nextDiagnostic, openLintPanel, previousDiagnostic, setDiagnostics, setDiagnosticsEffect };","map":{"version":3,"sources":["/Users/sairahulpadma/Desktop/leetcodeUI/frontend/node_modules/@codemirror/lint/dist/index.js"],"names":["Decoration","showPanel","EditorView","ViewPlugin","gutter","showTooltip","hoverTooltip","getPanel","logException","WidgetType","GutterMarker","StateEffect","StateField","Facet","combineConfig","RangeSet","elt","SelectedDiagnostic","constructor","from","to","diagnostic","LintState","diagnostics","panel","selected","init","state","markedDiagnostics","diagnosticFilter","facet","lintConfig","markerFilter","ranges","set","map","d","doc","lineAt","widget","DiagnosticWidget","range","mark","attributes","class","severity","markClass","findDiagnostic","after","found","between","spec","hideTooltip","tr","tooltip","pos","end","result","hideOn","line","startState","effects","some","e","is","setDiagnosticsEffect","changes","touchesRange","Math","max","maybeEnableLint","field","lintState","concat","appendConfig","of","lintExtensions","setDiagnostics","define","togglePanel","movePanelSelection","create","none","update","value","docChanged","size","mapped","selPos","mapPos","autoPanel","effect","length","LintPanel","open","provide","f","val","decorations","s","diagnosticCount","lint","activeMark","lintTooltip","view","side","stackStart","stackEnd","push","min","tooltipFilter","above","dom","diagnosticsTooltip","renderDiagnostic","openLintPanel","dispatch","querySelector","focus","closeLintPanel","nextDiagnostic","sel","selection","main","next","iter","anchor","head","scrollIntoView","previousDiagnostic","prevFrom","prevTo","lastFrom","lastTo","lintKeymap","key","run","preventDefault","lintPlugin","fromClass","timeout","delay","lintTime","Date","now","bind","setTimeout","clearTimeout","sources","batchResults","Promise","resolve","annotations","reduce","a","b","error","config","needsRefresh","force","destroy","promises","sink","collected","p","then","combine","input","Object","assign","i","source","filter","x","u","linter","forceLinting","plugin","assignKeys","actions","assigned","name","ch","test","c","toLowerCase","inPanel","_a","keys","renderMessage","message","action","fired","click","apply","keyIndex","indexOf","nameElt","slice","type","onclick","onmousedown","eq","other","toDOM","PanelItem","id","floor","random","toString","setAttribute","items","onkeydown","event","keyCode","moveSelection","selectedIndex","toUpperCase","charCodeAt","contains","target","list","tabIndex","role","phrase","needsSync","newSelectedItem","_start","_end","item","j","splice","hasAttribute","removeAttribute","pop","requestMeasure","read","getBoundingClientRect","write","scaleY","height","offsetHeight","top","scrollTop","bottom","sync","domPos","firstChild","rm","prev","nextSibling","remove","parentNode","insertBefore","svg","content","attrs","encodeURIComponent","underline","color","baseTheme","padding","marginLeft","display","whiteSpace","borderLeft","font","border","backgroundColor","borderRadius","cursor","fontSize","opacity","backgroundPosition","backgroundRepeat","paddingBottom","backgroundImage","margin","position","left","borderRight","borderBottom","borderBottomColor","maxHeight","overflowY","textDecoration","background_fallback","color_fallback","right","background","severityWeight","sev","LintGutterMarker","document","createElement","className","diagnosticsFilter","lintGutterConfig","onmouseover","gutterMarkerMouseOver","trackHoverOn","marker","mousemove","rect","clientX","clientY","nodeType","classList","window","removeEventListener","lintGutterTooltip","setLintGutterTooltip","addEventListener","hovered","elementAtHeight","documentTop","linePos","coordsAtPos","getCoords","onmouseout","onmousemove","hoverTime","hoverTimeout","markersForDiagnostics","byLine","markers","lintGutterExtension","lintGutterMarkers","widgetMarker","block","empty","t","lintGutterTheme","width","compute","configs","lintGutter","forEachDiagnostic","lState"],"mappings":"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","sourcesContent":["import { Decoration, showPanel, EditorView, ViewPlugin, gutter, showTooltip, hoverTooltip, getPanel, logException, WidgetType, GutterMarker } from '@codemirror/view';\nimport { StateEffect, StateField, Facet, combineConfig, RangeSet } from '@codemirror/state';\nimport elt from 'crelt';\n\nclass SelectedDiagnostic {\n    constructor(from, to, diagnostic) {\n        this.from = from;\n        this.to = to;\n        this.diagnostic = diagnostic;\n    }\n}\nclass LintState {\n    constructor(diagnostics, panel, selected) {\n        this.diagnostics = diagnostics;\n        this.panel = panel;\n        this.selected = selected;\n    }\n    static init(diagnostics, panel, state) {\n        // Filter the list of diagnostics for which to create markers\n        let markedDiagnostics = diagnostics;\n        let diagnosticFilter = state.facet(lintConfig).markerFilter;\n        if (diagnosticFilter)\n            markedDiagnostics = diagnosticFilter(markedDiagnostics, state);\n        let ranges = Decoration.set(markedDiagnostics.map((d) => {\n            // For zero-length ranges or ranges covering only a line break, create a widget\n            return d.from == d.to || (d.from == d.to - 1 && state.doc.lineAt(d.from).to == d.from)\n                ? Decoration.widget({\n                    widget: new DiagnosticWidget(d),\n                    diagnostic: d\n                }).range(d.from)\n                : Decoration.mark({\n                    attributes: { class: \"cm-lintRange cm-lintRange-\" + d.severity + (d.markClass ? \" \" + d.markClass : \"\") },\n                    diagnostic: d\n                }).range(d.from, d.to);\n        }), true);\n        return new LintState(ranges, panel, findDiagnostic(ranges));\n    }\n}\nfunction findDiagnostic(diagnostics, diagnostic = null, after = 0) {\n    let found = null;\n    diagnostics.between(after, 1e9, (from, to, { spec }) => {\n        if (diagnostic && spec.diagnostic != diagnostic)\n            return;\n        found = new SelectedDiagnostic(from, to, spec.diagnostic);\n        return false;\n    });\n    return found;\n}\nfunction hideTooltip(tr, tooltip) {\n    let from = tooltip.pos, to = tooltip.end || from;\n    let result = tr.state.facet(lintConfig).hideOn(tr, from, to);\n    if (result != null)\n        return result;\n    let line = tr.startState.doc.lineAt(tooltip.pos);\n    return !!(tr.effects.some(e => e.is(setDiagnosticsEffect)) || tr.changes.touchesRange(line.from, Math.max(line.to, to)));\n}\nfunction maybeEnableLint(state, effects) {\n    return state.field(lintState, false) ? effects : effects.concat(StateEffect.appendConfig.of(lintExtensions));\n}\n/**\nReturns a transaction spec which updates the current set of\ndiagnostics, and enables the lint extension if if wasn't already\nactive.\n*/\nfunction setDiagnostics(state, diagnostics) {\n    return {\n        effects: maybeEnableLint(state, [setDiagnosticsEffect.of(diagnostics)])\n    };\n}\n/**\nThe state effect that updates the set of active diagnostics. Can\nbe useful when writing an extension that needs to track these.\n*/\nconst setDiagnosticsEffect = /*@__PURE__*/StateEffect.define();\nconst togglePanel = /*@__PURE__*/StateEffect.define();\nconst movePanelSelection = /*@__PURE__*/StateEffect.define();\nconst lintState = /*@__PURE__*/StateField.define({\n    create() {\n        return new LintState(Decoration.none, null, null);\n    },\n    update(value, tr) {\n        if (tr.docChanged && value.diagnostics.size) {\n            let mapped = value.diagnostics.map(tr.changes), selected = null, panel = value.panel;\n            if (value.selected) {\n                let selPos = tr.changes.mapPos(value.selected.from, 1);\n                selected = findDiagnostic(mapped, value.selected.diagnostic, selPos) || findDiagnostic(mapped, null, selPos);\n            }\n            if (!mapped.size && panel && tr.state.facet(lintConfig).autoPanel)\n                panel = null;\n            value = new LintState(mapped, panel, selected);\n        }\n        for (let effect of tr.effects) {\n            if (effect.is(setDiagnosticsEffect)) {\n                let panel = !tr.state.facet(lintConfig).autoPanel ? value.panel : effect.value.length ? LintPanel.open : null;\n                value = LintState.init(effect.value, panel, tr.state);\n            }\n            else if (effect.is(togglePanel)) {\n                value = new LintState(value.diagnostics, effect.value ? LintPanel.open : null, value.selected);\n            }\n            else if (effect.is(movePanelSelection)) {\n                value = new LintState(value.diagnostics, value.panel, effect.value);\n            }\n        }\n        return value;\n    },\n    provide: f => [showPanel.from(f, val => val.panel),\n        EditorView.decorations.from(f, s => s.diagnostics)]\n});\n/**\nReturns the number of active lint diagnostics in the given state.\n*/\nfunction diagnosticCount(state) {\n    let lint = state.field(lintState, false);\n    return lint ? lint.diagnostics.size : 0;\n}\nconst activeMark = /*@__PURE__*/Decoration.mark({ class: \"cm-lintRange cm-lintRange-active\" });\nfunction lintTooltip(view, pos, side) {\n    let { diagnostics } = view.state.field(lintState);\n    let found = [], stackStart = 2e8, stackEnd = 0;\n    diagnostics.between(pos - (side < 0 ? 1 : 0), pos + (side > 0 ? 1 : 0), (from, to, { spec }) => {\n        if (pos >= from && pos <= to &&\n            (from == to || ((pos > from || side > 0) && (pos < to || side < 0)))) {\n            found.push(spec.diagnostic);\n            stackStart = Math.min(from, stackStart);\n            stackEnd = Math.max(to, stackEnd);\n        }\n    });\n    let diagnosticFilter = view.state.facet(lintConfig).tooltipFilter;\n    if (diagnosticFilter)\n        found = diagnosticFilter(found, view.state);\n    if (!found.length)\n        return null;\n    return {\n        pos: stackStart,\n        end: stackEnd,\n        above: view.state.doc.lineAt(stackStart).to < stackEnd,\n        create() {\n            return { dom: diagnosticsTooltip(view, found) };\n        }\n    };\n}\nfunction diagnosticsTooltip(view, diagnostics) {\n    return elt(\"ul\", { class: \"cm-tooltip-lint\" }, diagnostics.map(d => renderDiagnostic(view, d, false)));\n}\n/**\nCommand to open and focus the lint panel.\n*/\nconst openLintPanel = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field || !field.panel)\n        view.dispatch({ effects: maybeEnableLint(view.state, [togglePanel.of(true)]) });\n    let panel = getPanel(view, LintPanel.open);\n    if (panel)\n        panel.dom.querySelector(\".cm-panel-lint ul\").focus();\n    return true;\n};\n/**\nCommand to close the lint panel, when open.\n*/\nconst closeLintPanel = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field || !field.panel)\n        return false;\n    view.dispatch({ effects: togglePanel.of(false) });\n    return true;\n};\n/**\nMove the selection to the next diagnostic.\n*/\nconst nextDiagnostic = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field)\n        return false;\n    let sel = view.state.selection.main, next = field.diagnostics.iter(sel.to + 1);\n    if (!next.value) {\n        next = field.diagnostics.iter(0);\n        if (!next.value || next.from == sel.from && next.to == sel.to)\n            return false;\n    }\n    view.dispatch({ selection: { anchor: next.from, head: next.to }, scrollIntoView: true });\n    return true;\n};\n/**\nMove the selection to the previous diagnostic.\n*/\nconst previousDiagnostic = (view) => {\n    let { state } = view, field = state.field(lintState, false);\n    if (!field)\n        return false;\n    let sel = state.selection.main;\n    let prevFrom, prevTo, lastFrom, lastTo;\n    field.diagnostics.between(0, state.doc.length, (from, to) => {\n        if (to < sel.to && (prevFrom == null || prevFrom < from)) {\n            prevFrom = from;\n            prevTo = to;\n        }\n        if (lastFrom == null || from > lastFrom) {\n            lastFrom = from;\n            lastTo = to;\n        }\n    });\n    if (lastFrom == null || prevFrom == null && lastFrom == sel.from)\n        return false;\n    view.dispatch({ selection: { anchor: prevFrom !== null && prevFrom !== void 0 ? prevFrom : lastFrom, head: prevTo !== null && prevTo !== void 0 ? prevTo : lastTo }, scrollIntoView: true });\n    return true;\n};\n/**\nA set of default key bindings for the lint functionality.\n\n- Ctrl-Shift-m (Cmd-Shift-m on macOS): [`openLintPanel`](https://codemirror.net/6/docs/ref/#lint.openLintPanel)\n- F8: [`nextDiagnostic`](https://codemirror.net/6/docs/ref/#lint.nextDiagnostic)\n*/\nconst lintKeymap = [\n    { key: \"Mod-Shift-m\", run: openLintPanel, preventDefault: true },\n    { key: \"F8\", run: nextDiagnostic }\n];\nconst lintPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.timeout = -1;\n        this.set = true;\n        let { delay } = view.state.facet(lintConfig);\n        this.lintTime = Date.now() + delay;\n        this.run = this.run.bind(this);\n        this.timeout = setTimeout(this.run, delay);\n    }\n    run() {\n        clearTimeout(this.timeout);\n        let now = Date.now();\n        if (now < this.lintTime - 10) {\n            this.timeout = setTimeout(this.run, this.lintTime - now);\n        }\n        else {\n            this.set = false;\n            let { state } = this.view, { sources } = state.facet(lintConfig);\n            if (sources.length)\n                batchResults(sources.map(s => Promise.resolve(s(this.view))), annotations => {\n                    if (this.view.state.doc == state.doc)\n                        this.view.dispatch(setDiagnostics(this.view.state, annotations.reduce((a, b) => a.concat(b))));\n                }, error => { logException(this.view.state, error); });\n        }\n    }\n    update(update) {\n        let config = update.state.facet(lintConfig);\n        if (update.docChanged || config != update.startState.facet(lintConfig) ||\n            config.needsRefresh && config.needsRefresh(update)) {\n            this.lintTime = Date.now() + config.delay;\n            if (!this.set) {\n                this.set = true;\n                this.timeout = setTimeout(this.run, config.delay);\n            }\n        }\n    }\n    force() {\n        if (this.set) {\n            this.lintTime = Date.now();\n            this.run();\n        }\n    }\n    destroy() {\n        clearTimeout(this.timeout);\n    }\n});\nfunction batchResults(promises, sink, error) {\n    let collected = [], timeout = -1;\n    for (let p of promises)\n        p.then(value => {\n            collected.push(value);\n            clearTimeout(timeout);\n            if (collected.length == promises.length)\n                sink(collected);\n            else\n                setTimeout(() => sink(collected), 200);\n        }, error);\n}\nconst lintConfig = /*@__PURE__*/Facet.define({\n    combine(input) {\n        return Object.assign({ sources: input.map(i => i.source).filter(x => x != null) }, combineConfig(input.map(i => i.config), {\n            delay: 750,\n            markerFilter: null,\n            tooltipFilter: null,\n            needsRefresh: null,\n            hideOn: () => null,\n        }, {\n            needsRefresh: (a, b) => !a ? b : !b ? a : u => a(u) || b(u)\n        }));\n    }\n});\n/**\nGiven a diagnostic source, this function returns an extension that\nenables linting with that source. It will be called whenever the\neditor is idle (after its content changed). If `null` is given as\nsource, this only configures the lint extension.\n*/\nfunction linter(source, config = {}) {\n    return [\n        lintConfig.of({ source, config }),\n        lintPlugin,\n        lintExtensions\n    ];\n}\n/**\nForces any linters [configured](https://codemirror.net/6/docs/ref/#lint.linter) to run when the\neditor is idle to run right away.\n*/\nfunction forceLinting(view) {\n    let plugin = view.plugin(lintPlugin);\n    if (plugin)\n        plugin.force();\n}\nfunction assignKeys(actions) {\n    let assigned = [];\n    if (actions)\n        actions: for (let { name } of actions) {\n            for (let i = 0; i < name.length; i++) {\n                let ch = name[i];\n                if (/[a-zA-Z]/.test(ch) && !assigned.some(c => c.toLowerCase() == ch.toLowerCase())) {\n                    assigned.push(ch);\n                    continue actions;\n                }\n            }\n            assigned.push(\"\");\n        }\n    return assigned;\n}\nfunction renderDiagnostic(view, diagnostic, inPanel) {\n    var _a;\n    let keys = inPanel ? assignKeys(diagnostic.actions) : [];\n    return elt(\"li\", { class: \"cm-diagnostic cm-diagnostic-\" + diagnostic.severity }, elt(\"span\", { class: \"cm-diagnosticText\" }, diagnostic.renderMessage ? diagnostic.renderMessage(view) : diagnostic.message), (_a = diagnostic.actions) === null || _a === void 0 ? void 0 : _a.map((action, i) => {\n        let fired = false, click = (e) => {\n            e.preventDefault();\n            if (fired)\n                return;\n            fired = true;\n            let found = findDiagnostic(view.state.field(lintState).diagnostics, diagnostic);\n            if (found)\n                action.apply(view, found.from, found.to);\n        };\n        let { name } = action, keyIndex = keys[i] ? name.indexOf(keys[i]) : -1;\n        let nameElt = keyIndex < 0 ? name : [name.slice(0, keyIndex),\n            elt(\"u\", name.slice(keyIndex, keyIndex + 1)),\n            name.slice(keyIndex + 1)];\n        return elt(\"button\", {\n            type: \"button\",\n            class: \"cm-diagnosticAction\",\n            onclick: click,\n            onmousedown: click,\n            \"aria-label\": ` Action: ${name}${keyIndex < 0 ? \"\" : ` (access key \"${keys[i]})\"`}.`\n        }, nameElt);\n    }), diagnostic.source && elt(\"div\", { class: \"cm-diagnosticSource\" }, diagnostic.source));\n}\nclass DiagnosticWidget extends WidgetType {\n    constructor(diagnostic) {\n        super();\n        this.diagnostic = diagnostic;\n    }\n    eq(other) { return other.diagnostic == this.diagnostic; }\n    toDOM() {\n        return elt(\"span\", { class: \"cm-lintPoint cm-lintPoint-\" + this.diagnostic.severity });\n    }\n}\nclass PanelItem {\n    constructor(view, diagnostic) {\n        this.diagnostic = diagnostic;\n        this.id = \"item_\" + Math.floor(Math.random() * 0xffffffff).toString(16);\n        this.dom = renderDiagnostic(view, diagnostic, true);\n        this.dom.id = this.id;\n        this.dom.setAttribute(\"role\", \"option\");\n    }\n}\nclass LintPanel {\n    constructor(view) {\n        this.view = view;\n        this.items = [];\n        let onkeydown = (event) => {\n            if (event.keyCode == 27) { // Escape\n                closeLintPanel(this.view);\n                this.view.focus();\n            }\n            else if (event.keyCode == 38 || event.keyCode == 33) { // ArrowUp, PageUp\n                this.moveSelection((this.selectedIndex - 1 + this.items.length) % this.items.length);\n            }\n            else if (event.keyCode == 40 || event.keyCode == 34) { // ArrowDown, PageDown\n                this.moveSelection((this.selectedIndex + 1) % this.items.length);\n            }\n            else if (event.keyCode == 36) { // Home\n                this.moveSelection(0);\n            }\n            else if (event.keyCode == 35) { // End\n                this.moveSelection(this.items.length - 1);\n            }\n            else if (event.keyCode == 13) { // Enter\n                this.view.focus();\n            }\n            else if (event.keyCode >= 65 && event.keyCode <= 90 && this.selectedIndex >= 0) { // A-Z\n                let { diagnostic } = this.items[this.selectedIndex], keys = assignKeys(diagnostic.actions);\n                for (let i = 0; i < keys.length; i++)\n                    if (keys[i].toUpperCase().charCodeAt(0) == event.keyCode) {\n                        let found = findDiagnostic(this.view.state.field(lintState).diagnostics, diagnostic);\n                        if (found)\n                            diagnostic.actions[i].apply(view, found.from, found.to);\n                    }\n            }\n            else {\n                return;\n            }\n            event.preventDefault();\n        };\n        let onclick = (event) => {\n            for (let i = 0; i < this.items.length; i++) {\n                if (this.items[i].dom.contains(event.target))\n                    this.moveSelection(i);\n            }\n        };\n        this.list = elt(\"ul\", {\n            tabIndex: 0,\n            role: \"listbox\",\n            \"aria-label\": this.view.state.phrase(\"Diagnostics\"),\n            onkeydown,\n            onclick\n        });\n        this.dom = elt(\"div\", { class: \"cm-panel-lint\" }, this.list, elt(\"button\", {\n            type: \"button\",\n            name: \"close\",\n            \"aria-label\": this.view.state.phrase(\"close\"),\n            onclick: () => closeLintPanel(this.view)\n        }, \"×\"));\n        this.update();\n    }\n    get selectedIndex() {\n        let selected = this.view.state.field(lintState).selected;\n        if (!selected)\n            return -1;\n        for (let i = 0; i < this.items.length; i++)\n            if (this.items[i].diagnostic == selected.diagnostic)\n                return i;\n        return -1;\n    }\n    update() {\n        let { diagnostics, selected } = this.view.state.field(lintState);\n        let i = 0, needsSync = false, newSelectedItem = null;\n        diagnostics.between(0, this.view.state.doc.length, (_start, _end, { spec }) => {\n            let found = -1, item;\n            for (let j = i; j < this.items.length; j++)\n                if (this.items[j].diagnostic == spec.diagnostic) {\n                    found = j;\n                    break;\n                }\n            if (found < 0) {\n                item = new PanelItem(this.view, spec.diagnostic);\n                this.items.splice(i, 0, item);\n                needsSync = true;\n            }\n            else {\n                item = this.items[found];\n                if (found > i) {\n                    this.items.splice(i, found - i);\n                    needsSync = true;\n                }\n            }\n            if (selected && item.diagnostic == selected.diagnostic) {\n                if (!item.dom.hasAttribute(\"aria-selected\")) {\n                    item.dom.setAttribute(\"aria-selected\", \"true\");\n                    newSelectedItem = item;\n                }\n            }\n            else if (item.dom.hasAttribute(\"aria-selected\")) {\n                item.dom.removeAttribute(\"aria-selected\");\n            }\n            i++;\n        });\n        while (i < this.items.length && !(this.items.length == 1 && this.items[0].diagnostic.from < 0)) {\n            needsSync = true;\n            this.items.pop();\n        }\n        if (this.items.length == 0) {\n            this.items.push(new PanelItem(this.view, {\n                from: -1, to: -1,\n                severity: \"info\",\n                message: this.view.state.phrase(\"No diagnostics\")\n            }));\n            needsSync = true;\n        }\n        if (newSelectedItem) {\n            this.list.setAttribute(\"aria-activedescendant\", newSelectedItem.id);\n            this.view.requestMeasure({\n                key: this,\n                read: () => ({ sel: newSelectedItem.dom.getBoundingClientRect(), panel: this.list.getBoundingClientRect() }),\n                write: ({ sel, panel }) => {\n                    let scaleY = panel.height / this.list.offsetHeight;\n                    if (sel.top < panel.top)\n                        this.list.scrollTop -= (panel.top - sel.top) / scaleY;\n                    else if (sel.bottom > panel.bottom)\n                        this.list.scrollTop += (sel.bottom - panel.bottom) / scaleY;\n                }\n            });\n        }\n        else if (this.selectedIndex < 0) {\n            this.list.removeAttribute(\"aria-activedescendant\");\n        }\n        if (needsSync)\n            this.sync();\n    }\n    sync() {\n        let domPos = this.list.firstChild;\n        function rm() {\n            let prev = domPos;\n            domPos = prev.nextSibling;\n            prev.remove();\n        }\n        for (let item of this.items) {\n            if (item.dom.parentNode == this.list) {\n                while (domPos != item.dom)\n                    rm();\n                domPos = item.dom.nextSibling;\n            }\n            else {\n                this.list.insertBefore(item.dom, domPos);\n            }\n        }\n        while (domPos)\n            rm();\n    }\n    moveSelection(selectedIndex) {\n        if (this.selectedIndex < 0)\n            return;\n        let field = this.view.state.field(lintState);\n        let selection = findDiagnostic(field.diagnostics, this.items[selectedIndex].diagnostic);\n        if (!selection)\n            return;\n        this.view.dispatch({\n            selection: { anchor: selection.from, head: selection.to },\n            scrollIntoView: true,\n            effects: movePanelSelection.of(selection)\n        });\n    }\n    static open(view) { return new LintPanel(view); }\n}\nfunction svg(content, attrs = `viewBox=\"0 0 40 40\"`) {\n    return `url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" ${attrs}>${encodeURIComponent(content)}</svg>')`;\n}\nfunction underline(color) {\n    return svg(`<path d=\"m0 2.5 l2 -1.5 l1 0 l2 1.5 l1 0\" stroke=\"${color}\" fill=\"none\" stroke-width=\".7\"/>`, `width=\"6\" height=\"3\"`);\n}\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-diagnostic\": {\n        padding: \"3px 6px 3px 8px\",\n        marginLeft: \"-1px\",\n        display: \"block\",\n        whiteSpace: \"pre-wrap\"\n    },\n    \".cm-diagnostic-error\": { borderLeft: \"5px solid #d11\" },\n    \".cm-diagnostic-warning\": { borderLeft: \"5px solid orange\" },\n    \".cm-diagnostic-info\": { borderLeft: \"5px solid #999\" },\n    \".cm-diagnostic-hint\": { borderLeft: \"5px solid #66d\" },\n    \".cm-diagnosticAction\": {\n        font: \"inherit\",\n        border: \"none\",\n        padding: \"2px 4px\",\n        backgroundColor: \"#444\",\n        color: \"white\",\n        borderRadius: \"3px\",\n        marginLeft: \"8px\",\n        cursor: \"pointer\"\n    },\n    \".cm-diagnosticSource\": {\n        fontSize: \"70%\",\n        opacity: .7\n    },\n    \".cm-lintRange\": {\n        backgroundPosition: \"left bottom\",\n        backgroundRepeat: \"repeat-x\",\n        paddingBottom: \"0.7px\",\n    },\n    \".cm-lintRange-error\": { backgroundImage: /*@__PURE__*/underline(\"#d11\") },\n    \".cm-lintRange-warning\": { backgroundImage: /*@__PURE__*/underline(\"orange\") },\n    \".cm-lintRange-info\": { backgroundImage: /*@__PURE__*/underline(\"#999\") },\n    \".cm-lintRange-hint\": { backgroundImage: /*@__PURE__*/underline(\"#66d\") },\n    \".cm-lintRange-active\": { backgroundColor: \"#ffdd9980\" },\n    \".cm-tooltip-lint\": {\n        padding: 0,\n        margin: 0\n    },\n    \".cm-lintPoint\": {\n        position: \"relative\",\n        \"&:after\": {\n            content: '\"\"',\n            position: \"absolute\",\n            bottom: 0,\n            left: \"-2px\",\n            borderLeft: \"3px solid transparent\",\n            borderRight: \"3px solid transparent\",\n            borderBottom: \"4px solid #d11\"\n        }\n    },\n    \".cm-lintPoint-warning\": {\n        \"&:after\": { borderBottomColor: \"orange\" }\n    },\n    \".cm-lintPoint-info\": {\n        \"&:after\": { borderBottomColor: \"#999\" }\n    },\n    \".cm-lintPoint-hint\": {\n        \"&:after\": { borderBottomColor: \"#66d\" }\n    },\n    \".cm-panel.cm-panel-lint\": {\n        position: \"relative\",\n        \"& ul\": {\n            maxHeight: \"100px\",\n            overflowY: \"auto\",\n            \"& [aria-selected]\": {\n                backgroundColor: \"#ddd\",\n                \"& u\": { textDecoration: \"underline\" }\n            },\n            \"&:focus [aria-selected]\": {\n                background_fallback: \"#bdf\",\n                backgroundColor: \"Highlight\",\n                color_fallback: \"white\",\n                color: \"HighlightText\"\n            },\n            \"& u\": { textDecoration: \"none\" },\n            padding: 0,\n            margin: 0\n        },\n        \"& [name=close]\": {\n            position: \"absolute\",\n            top: \"0\",\n            right: \"2px\",\n            background: \"inherit\",\n            border: \"none\",\n            font: \"inherit\",\n            padding: 0,\n            margin: 0\n        }\n    }\n});\nfunction severityWeight(sev) {\n    return sev == \"error\" ? 4 : sev == \"warning\" ? 3 : sev == \"info\" ? 2 : 1;\n}\nclass LintGutterMarker extends GutterMarker {\n    constructor(diagnostics) {\n        super();\n        this.diagnostics = diagnostics;\n        this.severity = diagnostics.reduce((max, d) => severityWeight(max) < severityWeight(d.severity) ? d.severity : max, \"hint\");\n    }\n    toDOM(view) {\n        let elt = document.createElement(\"div\");\n        elt.className = \"cm-lint-marker cm-lint-marker-\" + this.severity;\n        let diagnostics = this.diagnostics;\n        let diagnosticsFilter = view.state.facet(lintGutterConfig).tooltipFilter;\n        if (diagnosticsFilter)\n            diagnostics = diagnosticsFilter(diagnostics, view.state);\n        if (diagnostics.length)\n            elt.onmouseover = () => gutterMarkerMouseOver(view, elt, diagnostics);\n        return elt;\n    }\n}\nfunction trackHoverOn(view, marker) {\n    let mousemove = (event) => {\n        let rect = marker.getBoundingClientRect();\n        if (event.clientX > rect.left - 10 /* Hover.Margin */ && event.clientX < rect.right + 10 /* Hover.Margin */ &&\n            event.clientY > rect.top - 10 /* Hover.Margin */ && event.clientY < rect.bottom + 10 /* Hover.Margin */)\n            return;\n        for (let target = event.target; target; target = target.parentNode) {\n            if (target.nodeType == 1 && target.classList.contains(\"cm-tooltip-lint\"))\n                return;\n        }\n        window.removeEventListener(\"mousemove\", mousemove);\n        if (view.state.field(lintGutterTooltip))\n            view.dispatch({ effects: setLintGutterTooltip.of(null) });\n    };\n    window.addEventListener(\"mousemove\", mousemove);\n}\nfunction gutterMarkerMouseOver(view, marker, diagnostics) {\n    function hovered() {\n        let line = view.elementAtHeight(marker.getBoundingClientRect().top + 5 - view.documentTop);\n        const linePos = view.coordsAtPos(line.from);\n        if (linePos) {\n            view.dispatch({ effects: setLintGutterTooltip.of({\n                    pos: line.from,\n                    above: false,\n                    create() {\n                        return {\n                            dom: diagnosticsTooltip(view, diagnostics),\n                            getCoords: () => marker.getBoundingClientRect()\n                        };\n                    }\n                }) });\n        }\n        marker.onmouseout = marker.onmousemove = null;\n        trackHoverOn(view, marker);\n    }\n    let { hoverTime } = view.state.facet(lintGutterConfig);\n    let hoverTimeout = setTimeout(hovered, hoverTime);\n    marker.onmouseout = () => {\n        clearTimeout(hoverTimeout);\n        marker.onmouseout = marker.onmousemove = null;\n    };\n    marker.onmousemove = () => {\n        clearTimeout(hoverTimeout);\n        hoverTimeout = setTimeout(hovered, hoverTime);\n    };\n}\nfunction markersForDiagnostics(doc, diagnostics) {\n    let byLine = Object.create(null);\n    for (let diagnostic of diagnostics) {\n        let line = doc.lineAt(diagnostic.from);\n        (byLine[line.from] || (byLine[line.from] = [])).push(diagnostic);\n    }\n    let markers = [];\n    for (let line in byLine) {\n        markers.push(new LintGutterMarker(byLine[line]).range(+line));\n    }\n    return RangeSet.of(markers, true);\n}\nconst lintGutterExtension = /*@__PURE__*/gutter({\n    class: \"cm-gutter-lint\",\n    markers: view => view.state.field(lintGutterMarkers),\n    widgetMarker: (view, widget, block) => {\n        let diagnostics = [];\n        view.state.field(lintGutterMarkers).between(block.from, block.to, (from, to, value) => {\n            diagnostics.push(...value.diagnostics);\n        });\n        return diagnostics.length ? new LintGutterMarker(diagnostics) : null;\n    }\n});\nconst lintGutterMarkers = /*@__PURE__*/StateField.define({\n    create() {\n        return RangeSet.empty;\n    },\n    update(markers, tr) {\n        markers = markers.map(tr.changes);\n        let diagnosticFilter = tr.state.facet(lintGutterConfig).markerFilter;\n        for (let effect of tr.effects) {\n            if (effect.is(setDiagnosticsEffect)) {\n                let diagnostics = effect.value;\n                if (diagnosticFilter)\n                    diagnostics = diagnosticFilter(diagnostics || [], tr.state);\n                markers = markersForDiagnostics(tr.state.doc, diagnostics.slice(0));\n            }\n        }\n        return markers;\n    }\n});\nconst setLintGutterTooltip = /*@__PURE__*/StateEffect.define();\nconst lintGutterTooltip = /*@__PURE__*/StateField.define({\n    create() { return null; },\n    update(tooltip, tr) {\n        if (tooltip && tr.docChanged)\n            tooltip = hideTooltip(tr, tooltip) ? null : Object.assign(Object.assign({}, tooltip), { pos: tr.changes.mapPos(tooltip.pos) });\n        return tr.effects.reduce((t, e) => e.is(setLintGutterTooltip) ? e.value : t, tooltip);\n    },\n    provide: field => showTooltip.from(field)\n});\nconst lintGutterTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-gutter-lint\": {\n        width: \"1.4em\",\n        \"& .cm-gutterElement\": {\n            padding: \".2em\"\n        }\n    },\n    \".cm-lint-marker\": {\n        width: \"1em\",\n        height: \"1em\"\n    },\n    \".cm-lint-marker-info\": {\n        content: /*@__PURE__*/svg(`<path fill=\"#aaf\" stroke=\"#77e\" stroke-width=\"6\" stroke-linejoin=\"round\" d=\"M5 5L35 5L35 35L5 35Z\"/>`)\n    },\n    \".cm-lint-marker-warning\": {\n        content: /*@__PURE__*/svg(`<path fill=\"#fe8\" stroke=\"#fd7\" stroke-width=\"6\" stroke-linejoin=\"round\" d=\"M20 6L37 35L3 35Z\"/>`),\n    },\n    \".cm-lint-marker-error\": {\n        content: /*@__PURE__*/svg(`<circle cx=\"20\" cy=\"20\" r=\"15\" fill=\"#f87\" stroke=\"#f43\" stroke-width=\"6\"/>`)\n    },\n});\nconst lintExtensions = [\n    lintState,\n    /*@__PURE__*/EditorView.decorations.compute([lintState], state => {\n        let { selected, panel } = state.field(lintState);\n        return !selected || !panel || selected.from == selected.to ? Decoration.none : Decoration.set([\n            activeMark.range(selected.from, selected.to)\n        ]);\n    }),\n    /*@__PURE__*/hoverTooltip(lintTooltip, { hideOn: hideTooltip }),\n    baseTheme\n];\nconst lintGutterConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            hoverTime: 300 /* Hover.Time */,\n            markerFilter: null,\n            tooltipFilter: null\n        });\n    }\n});\n/**\nReturns an extension that installs a gutter showing markers for\neach line that has diagnostics, which can be hovered over to see\nthe diagnostics.\n*/\nfunction lintGutter(config = {}) {\n    return [lintGutterConfig.of(config), lintGutterMarkers, lintGutterExtension, lintGutterTheme, lintGutterTooltip];\n}\n/**\nIterate over the marked diagnostics for the given editor state,\ncalling `f` for each of them. Note that, if the document changed\nsince the diagnostics were created, the `Diagnostic` object will\nhold the original outdated position, whereas the `to` and `from`\narguments hold the diagnostic's current position.\n*/\nfunction forEachDiagnostic(state, f) {\n    let lState = state.field(lintState, false);\n    if (lState && lState.diagnostics.size)\n        for (let iter = RangeSet.iter([lState.diagnostics]); iter.value; iter.next())\n            f(iter.value.spec.diagnostic, iter.from, iter.to);\n}\n\nexport { closeLintPanel, diagnosticCount, forEachDiagnostic, forceLinting, lintGutter, lintKeymap, linter, nextDiagnostic, openLintPanel, previousDiagnostic, setDiagnostics, setDiagnosticsEffect };\n"]},"metadata":{},"sourceType":"module"}