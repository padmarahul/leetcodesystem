{"ast":null,"code":"var _jsxFileName = \"/Users/sairahulpadma/Desktop/leetcodeUI/frontend/src/pages/CodingEditorComponent/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Controlled as CodeMirror } from '@uiw/react-codemirror';\nimport { dracula } from '@uiw/codemirror-theme-dracula';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/dracula.css';\nimport 'codemirror/mode/javascript/javascript';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CodingEditorComponent = ({\n  problemId\n}) => {\n  _s();\n\n  const [problem, setProblem] = useState(null);\n  const [code, setCode] = useState('// Write your code here');\n  const [output, setOutput] = useState(''); // Fetch problem details from backend using problemId\n\n  useEffect(() => {\n    axios.get(`http://localhost:8080/lcms/coding-problems/${problemId}`).then(response => {\n      setProblem(response.data);\n    }).catch(error => {\n      console.error(\"There was an error fetching the problem details!\", error);\n    });\n  }, [problemId]); // Handle code submission to backend for running/compiling\n\n  const handleRunCode = () => {\n    axios.post('http://localhost:8080/run-code', {\n      code: code,\n      language: \"javascript\",\n      // You can dynamically change language\n      input: problem === null || problem === void 0 ? void 0 : problem.inputFormat // Include input data from the problem\n\n    }).then(response => {\n      setOutput(response.data.output); // Output of code execution\n    }).catch(error => {\n      console.error(\"Error running code:\", error);\n      setOutput(\"Error running code\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        padding: '20px',\n        borderRight: '1px solid #ddd'\n      },\n      children: problem ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: problem.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Difficulty: \", problem.difficulty]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: problem.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Input Format:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: problem.inputFormat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Output Format:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: problem.outputFormat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Example Test Cases:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(JSON.parse(problem.exampleTestCases), null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading problem...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        padding: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Code Editor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CodeMirror, {\n        value: code,\n        options: {\n          theme: 'dracula',\n          mode: 'javascript',\n          lineNumbers: true\n        },\n        onBeforeChange: (editor, data, value) => {\n          setCode(value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRunCode,\n        style: {\n          marginTop: '20px',\n          padding: '10px 20px'\n        },\n        children: \"Run Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Output:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: output\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CodingEditorComponent, \"b9Ny+GqCLkIgQysuFG3/0CyGnhM=\");\n\n_c = CodingEditorComponent;\nexport default CodingEditorComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"CodingEditorComponent\");","map":{"version":3,"sources":["/Users/sairahulpadma/Desktop/leetcodeUI/frontend/src/pages/CodingEditorComponent/index.js"],"names":["React","useState","useEffect","axios","Controlled","CodeMirror","dracula","CodingEditorComponent","problemId","problem","setProblem","code","setCode","output","setOutput","get","then","response","data","catch","error","console","handleRunCode","post","language","input","inputFormat","display","height","flex","padding","borderRight","title","difficulty","description","outputFormat","JSON","stringify","parse","exampleTestCases","theme","mode","lineNumbers","editor","value","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Controlled as CodeMirror } from '@uiw/react-codemirror';\nimport { dracula } from '@uiw/codemirror-theme-dracula';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/dracula.css';\nimport 'codemirror/mode/javascript/javascript';\n\nconst CodingEditorComponent = ({ problemId }) => {\n  const [problem, setProblem] = useState(null);\n  const [code, setCode] = useState('// Write your code here');\n  const [output, setOutput] = useState('');\n\n  // Fetch problem details from backend using problemId\n  useEffect(() => {\n    axios.get(`http://localhost:8080/lcms/coding-problems/${problemId}`)\n      .then(response => {\n        setProblem(response.data);\n      })\n      .catch(error => {\n        console.error(\"There was an error fetching the problem details!\", error);\n      });\n  }, [problemId]);\n\n  // Handle code submission to backend for running/compiling\n  const handleRunCode = () => {\n    axios.post('http://localhost:8080/run-code', {\n      code: code,\n      language: \"javascript\",  // You can dynamically change language\n      input: problem?.inputFormat // Include input data from the problem\n    }).then((response) => {\n      setOutput(response.data.output);  // Output of code execution\n    }).catch((error) => {\n      console.error(\"Error running code:\", error);\n      setOutput(\"Error running code\");\n    });\n  };\n\n  return (\n    <div style={{ display: 'flex', height: '100vh' }}>\n      {/* Left Section: Problem Details */}\n      <div style={{ flex: 1, padding: '20px', borderRight: '1px solid #ddd' }}>\n        {problem ? (\n          <>\n            <h1>{problem.title}</h1>\n            <h3>Difficulty: {problem.difficulty}</h3>\n            <p>{problem.description}</p>\n            <h4>Input Format:</h4>\n            <p>{problem.inputFormat}</p>\n            <h4>Output Format:</h4>\n            <p>{problem.outputFormat}</p>\n            <h4>Example Test Cases:</h4>\n            <pre>{JSON.stringify(JSON.parse(problem.exampleTestCases), null, 2)}</pre>\n          </>\n        ) : (\n          <p>Loading problem...</p>\n        )}\n      </div>\n\n      {/* Right Section: Code Editor */}\n      <div style={{ flex: 1, padding: '20px' }}>\n        <h2>Code Editor</h2>\n        <CodeMirror\n          value={code}\n          options={{\n            theme: 'dracula',\n            mode: 'javascript',\n            lineNumbers: true\n          }}\n          onBeforeChange={(editor, data, value) => {\n            setCode(value);\n          }}\n        />\n        <button onClick={handleRunCode} style={{ marginTop: '20px', padding: '10px 20px' }}>\n          Run Code\n        </button>\n        <div style={{ marginTop: '20px' }}>\n          <h3>Output:</h3>\n          <pre>{output}</pre>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CodingEditorComponent;\n"]},"metadata":{},"sourceType":"module"}