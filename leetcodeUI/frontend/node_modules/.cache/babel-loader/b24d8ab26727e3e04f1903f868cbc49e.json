{"ast":null,"code":"var _jsxFileName = \"/Users/sairahulpadma/Desktop/leetcodeUI/frontend/src/pages/DashboardComponent/Problems.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport DashboardServices from '../../services/DashboardServices';\nimport { TableContainer, Table, TableHead, TableRow, TableHeader, TableData, DifficultyLabel, FilterContainer, FilterLabel, FilterSelect } from \"./StyledElements\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProblemTable() {\n  _s();\n\n  const [problems, setProblems] = useState([]);\n  const [categoryFilter, setCategoryFilter] = useState(\"All\");\n  const [difficultyFilter, setDifficultyFilter] = useState(\"All\");\n  useEffect(() => {\n    // Fetch data from the backend\n    DashboardServices.getAllProblems().then(response => {\n      setProblems(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n\n  const handleCategoryChange = event => {\n    setCategoryFilter(event.target.value);\n  };\n\n  const handleDifficultyChange = event => {\n    setDifficultyFilter(event.target.value);\n  };\n\n  const filteredProblems = problems.filter(problem => {\n    return (categoryFilter === \"All\" || problem.category === categoryFilter) && (difficultyFilter === \"All\" || problem.difficulty === difficultyFilter);\n  });\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    children: [/*#__PURE__*/_jsxDEV(FilterContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(FilterLabel, {\n          children: \"Filter by Category:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilterSelect, {\n          value: categoryFilter,\n          onChange: handleCategoryChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"All\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Array\",\n            children: \"Array\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Linked List\",\n            children: \"Linked List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Stack\",\n            children: \"Stack\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(FilterLabel, {\n          children: \"Filter by Difficulty:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilterSelect, {\n          value: difficultyFilter,\n          onChange: handleDifficultyChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"All\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Easy\",\n            children: \"Easy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Medium\",\n            children: \"Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Hard\",\n            children: \"Hard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableHeader, {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableHeader, {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableHeader, {\n            children: \"Difficulty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableHeader, {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filteredProblems.map(problem => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableData, {\n            children: problem.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableData, {\n            children: problem.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableData, {\n            children: /*#__PURE__*/_jsxDEV(DifficultyLabel, {\n              difficulty: problem.difficulty,\n              children: problem.difficulty\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableData, {\n            children: problem.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, problem.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProblemTable, \"JuBGnPpMRLOQfBMUUf80kfpx+kM=\");\n\n_c = ProblemTable;\nexport default ProblemTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProblemTable\");","map":{"version":3,"sources":["/Users/sairahulpadma/Desktop/leetcodeUI/frontend/src/pages/DashboardComponent/Problems.js"],"names":["React","useEffect","useState","DashboardServices","TableContainer","Table","TableHead","TableRow","TableHeader","TableData","DifficultyLabel","FilterContainer","FilterLabel","FilterSelect","ProblemTable","problems","setProblems","categoryFilter","setCategoryFilter","difficultyFilter","setDifficultyFilter","getAllProblems","then","response","data","catch","error","console","log","handleCategoryChange","event","target","value","handleDifficultyChange","filteredProblems","filter","problem","category","difficulty","map","title","description","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport DashboardServices from '../../services/DashboardServices';\nimport {\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableData,\n  DifficultyLabel,\n  FilterContainer,\n  FilterLabel,\n  FilterSelect\n} from \"./StyledElements\";\n\nfunction ProblemTable() {\n  const [problems, setProblems] = useState([]);\n  const [categoryFilter, setCategoryFilter] = useState(\"All\");\n  const [difficultyFilter, setDifficultyFilter] = useState(\"All\");\n\n  useEffect(() => {\n    // Fetch data from the backend\n    DashboardServices.getAllProblems().then(response => {\n      setProblems(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n\n  const handleCategoryChange = (event) => {\n    setCategoryFilter(event.target.value);\n  };\n\n  const handleDifficultyChange = (event) => {\n    setDifficultyFilter(event.target.value);\n  };\n\n  const filteredProblems = problems.filter(problem => {\n    return (categoryFilter === \"All\" || problem.category === categoryFilter) &&\n           (difficultyFilter === \"All\" || problem.difficulty === difficultyFilter);\n  });\n\n  return (\n    <TableContainer>\n      <FilterContainer>\n        <div>\n          <FilterLabel>Filter by Category:</FilterLabel>\n          <FilterSelect value={categoryFilter} onChange={handleCategoryChange}>\n            <option value=\"All\">All</option>\n            <option value=\"Array\">Array</option>\n            <option value=\"Linked List\">Linked List</option>\n            <option value=\"Stack\">Stack</option>\n            {/* Add more categories as needed */}\n          </FilterSelect>\n        </div>\n        <div>\n          <FilterLabel>Filter by Difficulty:</FilterLabel>\n          <FilterSelect value={difficultyFilter} onChange={handleDifficultyChange}>\n            <option value=\"All\">All</option>\n            <option value=\"Easy\">Easy</option>\n            <option value=\"Medium\">Medium</option>\n            <option value=\"Hard\">Hard</option>\n          </FilterSelect>\n        </div>\n      </FilterContainer>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableHeader>Title</TableHeader>\n            <TableHeader>Description</TableHeader>\n            <TableHeader>Difficulty</TableHeader>\n            <TableHeader>Category</TableHeader>\n          </TableRow>\n        </TableHead>\n        <tbody>\n          {filteredProblems.map((problem) => (\n            <TableRow key={problem.id}>\n              <TableData>{problem.title}</TableData>\n              <TableData>{problem.description}</TableData>\n              <TableData>\n                <DifficultyLabel difficulty={problem.difficulty}>\n                  {problem.difficulty}\n                </DifficultyLabel>\n              </TableData>\n              <TableData>{problem.category}</TableData>\n            </TableRow>\n          ))}\n        </tbody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default ProblemTable;\n"]},"metadata":{},"sourceType":"module"}